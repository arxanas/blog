<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stenography and programming languages</title>
    <description>This is a personal blog. Unless otherwise stated, the opinions
expressed here are my own, and not those of my past or present
employers.</description>
    <link>https://blog.waleedkhan.name/</link>
    <atom:link href="https://blog.waleedkhan.name/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 12 Apr 2021 22:40:08 -0500</pubDate>
    <lastBuildDate>Mon, 12 Apr 2021 22:40:08 -0500</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Anecdata: hours invested vs percentile rank</title>
        <description>&lt;p&gt;The “10,000-hour rule” is the idea suggested in Malcolm Gladwell’s book &lt;a href=&quot;https://en.wikipedia.org/wiki/Outliers_(book)&quot;&gt;&lt;em&gt;Outliers&lt;/em&gt;&lt;/a&gt; that you need about 10,000 hours of practice to become an expert in a given field. The specifics are disputed (both in terms of the absolute amount of time, and how much of skill is explained by practice time), but it’s a simple way to evaluate one’s progress towards experthood.&lt;/p&gt;

&lt;p&gt;I switched from competitive chess to competitive videogaming. It’s interesting to compare the amount of time invested in each and examine how skillful I became in their respective competitive scenes as a result.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#switching-away-from-chess&quot; id=&quot;markdown-toc-switching-away-from-chess&quot;&gt;Switching away from chess&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#data&quot; id=&quot;markdown-toc-data&quot;&gt;Data&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#chess&quot; id=&quot;markdown-toc-chess&quot;&gt;Chess&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#background-practicing-chess&quot; id=&quot;markdown-toc-background-practicing-chess&quot;&gt;Background: practicing chess&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#percentile-calculation&quot; id=&quot;markdown-toc-percentile-calculation&quot;&gt;Percentile calculation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#practice-time-breakdown&quot; id=&quot;markdown-toc-practice-time-breakdown&quot;&gt;Practice time breakdown&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#smash&quot; id=&quot;markdown-toc-smash&quot;&gt;Smash&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#background-practicing-smash&quot; id=&quot;markdown-toc-background-practicing-smash&quot;&gt;Background: practicing Smash&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#percentile-calculation-1&quot; id=&quot;markdown-toc-percentile-calculation-1&quot;&gt;Percentile calculation&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#practice-time-breakdown-1&quot; id=&quot;markdown-toc-practice-time-breakdown-1&quot;&gt;Practice time breakdown&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#analysis&quot; id=&quot;markdown-toc-analysis&quot;&gt;Analysis&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#summary&quot; id=&quot;markdown-toc-summary&quot;&gt;Summary&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#caveats&quot; id=&quot;markdown-toc-caveats&quot;&gt;Caveats&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#blitz-chess&quot; id=&quot;markdown-toc-blitz-chess&quot;&gt;Blitz chess&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#online-smash&quot; id=&quot;markdown-toc-online-smash&quot;&gt;Online Smash&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#differing-player-pools&quot; id=&quot;markdown-toc-differing-player-pools&quot;&gt;Differing player pools&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusions&quot; id=&quot;markdown-toc-conclusions&quot;&gt;Conclusions&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#is-smash-a-better-use-of-my-time&quot; id=&quot;markdown-toc-is-smash-a-better-use-of-my-time&quot;&gt;Is &lt;em&gt;Smash&lt;/em&gt; a better use of my time?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#can-i-reach-expert-strength-in-smash&quot; id=&quot;markdown-toc-can-i-reach-expert-strength-in-smash&quot;&gt;Can I reach expert strength in &lt;em&gt;Smash&lt;/em&gt;?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#are-there-any-lessons-for-my-other-hobbies&quot; id=&quot;markdown-toc-are-there-any-lessons-for-my-other-hobbies&quot;&gt;Are there any lessons for my other hobbies?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;switching-away-from-chess&quot;&gt;Switching away from chess&lt;/h2&gt;

&lt;p&gt;For the last few years, I have been aiming at becoming a world-class player in my choice of game. Of course, whether I will achieve that goal is a different matter!&lt;/p&gt;

&lt;p&gt;I started investing in competitive chess in January 2014, while studying at university, around the time &lt;a href=&quot;https://en.wikipedia.org/wiki/Magnus_Carlsen&quot;&gt;Magnus Carlsen&lt;/a&gt; won the world championship and consequently sparked a renewed interest in chess for many.&lt;/p&gt;

&lt;p&gt;I graduated from university in April 2016, took up a full-time job, and played continuously until March 2019. I decided to quit in favor of playing the fighting game &lt;a href=&quot;https://en.wikipedia.org/wiki/Super_Smash_Bros._Ultimate&quot;&gt;&lt;em&gt;Super Smash Bros. Ultimate&lt;/em&gt;&lt;/a&gt; competitively. It was released in December 2018, just a few months prior.&lt;/p&gt;

&lt;p&gt;I decided to switch for two main reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The competition in chess is much fiercer. The game has been popular for hundreds of years, and the learning tools and resources have developed much more than for the &lt;em&gt;Smash Bros.&lt;/em&gt; franchise, whose first entrant was released in 1999.&lt;/li&gt;
  &lt;li&gt;I generally enjoy playing &lt;em&gt;Smash&lt;/em&gt; more than chess, which means that I naturally invest more practice time into it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I invested a significant amount of time in chess before dropping it, I want to look back at the data in this article and decide it was justified from a strictly numerical point of view. This might also impart some useful lessons for my other hobbies (currently piano and learning Polish).&lt;/p&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;You can skip this section to go to &lt;a href=&quot;#analysis&quot;&gt;Analysis&lt;/a&gt; if the details of the data don’t interest you.&lt;/p&gt;

&lt;h3 id=&quot;chess&quot;&gt;Chess&lt;/h3&gt;

&lt;p&gt;As a kid, I knew the rules and played in a handful of scholastic tournaments of laughable strength. For my chess blitz rating, I started at an estimated &lt;strong&gt;22nd percentile&lt;/strong&gt; and spent &lt;strong&gt;1068 hours practicing&lt;/strong&gt; to proceed to the &lt;strong&gt;77th percentile&lt;/strong&gt;.  Blitz strength may not be a good measure of skill, so see the analysis later.&lt;/p&gt;

&lt;h4 id=&quot;background-practicing-chess&quot;&gt;Background: practicing chess&lt;/h4&gt;

&lt;p&gt;Chess practice is primarily broken into time spent playing games and time spent studying. Studying is further divided into many areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Tactics training&lt;/em&gt;: The majority of training time is spent here. There are many automated tools to improve tactical skill, since it can be evaluated entirely by computer.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Strategic training&lt;/em&gt;: This is harder to train. Usually, one learns by reading about abstract principles in books, analyzing games, or receiving professional instruction.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Endgame training&lt;/em&gt;: At the endgame of chess, there are few pieces remaining on the board, and a mix of endgame-specific tactical and strategic principles need to be studied.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Opening training&lt;/em&gt;: Usually, it’s recommended for beginners not to focus on this, as the advantages are marginal compared to time spent on other areas of the game.&lt;/li&gt;
  &lt;li&gt;Analyzing one’s own games.&lt;/li&gt;
  &lt;li&gt;Analyzing top players’ games.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;percentile-calculation&quot;&gt;Percentile calculation&lt;/h4&gt;

&lt;p&gt;I estimated the percentile for my blitz strength. In a blitz game, each side has under ten minutes (or equivalent, due to chess clock rules) to make all their moves.&lt;/p&gt;

&lt;p&gt;I started a blitz rating of 850 at Chess.com. I wasn’t able to access the estimated percentile on Chess.com, so I added 300 rating points to roughly convert it to a Lichess rating, and used their leaderboards. I switched to primarly playing on Lichess for most games, where I ended with a blitz rating of 1801, which is the 77th percentile according to the Lichess leaderboards.&lt;/p&gt;

&lt;h4 id=&quot;practice-time-breakdown&quot;&gt;Practice time breakdown&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://chesstempo.com/&quot;&gt;ChessTempo&lt;/a&gt; tactics training: 746.5 hours.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lichess.org/&quot;&gt;Lichess&lt;/a&gt; game time: 275 hours (1753 games).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://chess.com/&quot;&gt;Chess.com&lt;/a&gt; game time: estimated 47 hours (300 games).
    &lt;ul&gt;
      &lt;li&gt;I couldn’t find this information on Chess.com easily. I took the average time per game from Lichess (275 hours / 1753 games) and multiplied it by my total number of games on Chess.com (300 games).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lichess percentile: 77% blitz (from the &lt;a href=&quot;https://lichess.org/stat/rating/distribution/blitz&quot;&gt;blitz leaderboard&lt;/a&gt;), 80% rapid (from the &lt;a href=&quot;https://lichess.org/stat/rating/distribution/rapid&quot;&gt;rapid leaderboard&lt;/a&gt;).
    &lt;ul&gt;
      &lt;li&gt;Chess.com also has percentile information, but it’s not available to me unless I’ve played a game recently.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A small amount of time (&amp;lt;20 hours) reading a couple of chess books.&lt;/li&gt;
  &lt;li&gt;A small amount of time (&amp;lt;20 hours) playing at the local chess club. (The events take place in a windowless basement for up to 12 hours at a time, so I only went a couple of times.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I took the lower bound of 746 + 275 + 47 = 1068 hours.&lt;/p&gt;

&lt;h3 id=&quot;smash&quot;&gt;Smash&lt;/h3&gt;

&lt;p&gt;I played &lt;em&gt;Super Smash Bros. Brawl&lt;/em&gt; as a kid, but only very casually. I’ve also had a variety of other dexterity-focused video games and hobbies.&lt;/p&gt;

&lt;p&gt;I started at the &lt;strong&gt;4th percentile&lt;/strong&gt; and spent an estimated &lt;strong&gt;1204&lt;/strong&gt; hours to reach the &lt;strong&gt;99th percentile&lt;/strong&gt; of online players.&lt;/p&gt;

&lt;h4 id=&quot;background-practicing-smash&quot;&gt;Background: practicing Smash&lt;/h4&gt;

&lt;p&gt;There is a “training mode” in &lt;em&gt;Smash Ultimate&lt;/em&gt;, which allows you to test out moves and combos against CPU opponents or real training partners. People use training mode to do drills, which are necessary to execute the fine-grained movements required by the game.&lt;/p&gt;

&lt;p&gt;The training mode is somewhat deficient compared to other fighting games when it comes to practicing combos rather than doing drills. While you’re executing a combo, the opponent may be able to input certain moves to escape, which the CPU will not do. If you don’t have a training partner, there are some software mods and hardware devices which can simulate these inputs. I didn’t have access to a training partner, and I didn’t use one of these automated solutions.&lt;/p&gt;

&lt;p&gt;I watched a few training videos on YouTube for general &lt;em&gt;Smash&lt;/em&gt; skills and specific to my character. I even &lt;a href=&quot;/smash-training-retrospective/&quot;&gt;created a training tool&lt;/a&gt; for myself to practice drills. This is an example of where I think the training tools are not well-developed in Smash compared to chess, and having access to a new tool could in principle accelerate the growth of new entrants.&lt;/p&gt;

&lt;p&gt;Other than training mode, players play games, either in-person or online. They can also analyze them later, although the built-in tools for doing so are not convenient to use. I spent a significant amount of time in training mode, but I mostly played games.&lt;/p&gt;

&lt;h4 id=&quot;percentile-calculation-1&quot;&gt;Percentile calculation&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;Smash&lt;/em&gt; online gameplay uses an inverted ranking system, in which your ranking is the number of players that you’re better than. It’s probably backed by an traditional rating system. Annoyingly, this means that your ranking will change over time without any meaningful differences in your skill.&lt;/p&gt;

&lt;p&gt;When a player reaches a percentile certain threshold, they’re admitted into “Elite Smash”. User-reported numbers have allowed people to reverse-engineer the total number of ranked players at any given time. In my experience, the estimate is fairly accurate (say, within 25,000).&lt;/p&gt;

&lt;p&gt;Unfortunately, I don’t remember the exact player count when I started. Some trawling through historical Reddit threads suggests it was at least 3,000,000 players. I remember being below 100,000 rank when I started, so that optimistically puts me at the 4th percentile.&lt;/p&gt;

&lt;h4 id=&quot;practice-time-breakdown-1&quot;&gt;Practice time breakdown&lt;/h4&gt;

&lt;p&gt;The Nintendo Switch records in-game time for the games you play. According to the Nintendo Switch’s in-game play time, I spent approximately 1204 hours to reach the 99.0th percentile. Some of that time was spent in loading screens or playing casually with friends.&lt;/p&gt;

&lt;h2 id=&quot;analysis&quot;&gt;Analysis&lt;/h2&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;The data is summarized below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Game&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Start percentile&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Hours spent&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;End percentile&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Chess&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;22%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1068&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;77%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;em&gt;Smash Ultimate&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;4%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1204&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;99%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Based on just the numbers, it looks like practicing &lt;em&gt;Smash Ultimate&lt;/em&gt; is a significantly better use of my time!&lt;/p&gt;

&lt;h3 id=&quot;caveats&quot;&gt;Caveats&lt;/h3&gt;

&lt;h4 id=&quot;blitz-chess&quot;&gt;Blitz chess&lt;/h4&gt;

&lt;p&gt;I primarily played “blitz” chess. In a blitz game, each side has under ten minutes (or equivalent, due to chess clock rules) to make all their moves. The conventional wisdom is that one should focus on standard chess to improve their general skills, and blitz chess to improve their blitz skills.&lt;/p&gt;

&lt;p&gt;I also played “rapid” chess games (which range between ten and thirty minutes). These games are much closer to the kind of games played in tournaments, but arguably still not slow enough. Interestingly, my rapid ratings were almost exactly the same as my blitz ratings:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chess.com: blitz 1644, rapid 1645&lt;/li&gt;
  &lt;li&gt;Lichess: blitz 1801, rapid 1804&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One could reasonably argue that I made much less progress in chess than in &lt;em&gt;Smash&lt;/em&gt; because I didn’t play enough slow chess. I’m not necessarily convinced by this conclusion:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Playing blitz games rather than slow games means more games with shorter feedback loops. Why should that be a bad thing? I think the determination of quality of this practice time is how much I thought about the game while playing it, rather than how long the game happened to be. Personally, I played blitz chess deliberately, focusing on finding a strong move, rather than running down the clock or playing on instinct.&lt;/li&gt;
  &lt;li&gt;746 hours / 1068 hours = 69% of my practice time was spent on tactics training. Does that mean that the other 31% of time was so poorly spent that it explains the 22-point percentile difference between chess and &lt;em&gt;Smash&lt;/em&gt;?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have not formally researched this topic to see if the question has been answered in the literature.&lt;/p&gt;

&lt;h4 id=&quot;online-smash&quot;&gt;Online Smash&lt;/h4&gt;

&lt;p&gt;The online experience for chess is as good or better than over-the-board experience. It’s generally easier to see all the pieces and move them around. Most chess sites implement a “pre-move” system, which is convenient, and makes it possible to play games at a speed which aren’t realistic over-the board.&lt;/p&gt;

&lt;p&gt;On the other hand, the online experience for &lt;em&gt;Smash Ultimate&lt;/em&gt; is not very good. In an in-person game, there are six frames (0.1 seconds) of input delay between pressing a button and having it happen. The online gameplay automatically enforces a minimum of five extra frames of delay, almost doubling the input delay compared to an in-person game, regardless of the actual geographic latency between players.&lt;/p&gt;

&lt;p&gt;Furthermore, the netcode for &lt;em&gt;Smash Ultimate&lt;/em&gt; uses a primarily “delay-based” mechanism, where all messages have to be acknowledged by all parties before gameplay can proceed. The current state-of-the-art for online fighting games is “rollback-based”, where each party can speculatively execute actions on behalf of the other party, and fix the game state only if the prediction was wrong.&lt;/p&gt;

&lt;p&gt;As a result of these factors, &lt;em&gt;Smash Ultimate&lt;/em&gt; has more latency than you would expect from a different fighting game, to the point where the metagame changes significantly online, and players generally can’t play optimally. Online &lt;em&gt;Smash Ultimate&lt;/em&gt; tournaments are not regarded seriously in the competitive scene, compared to in-person tournaments.&lt;/p&gt;

&lt;h4 id=&quot;differing-player-pools&quot;&gt;Differing player pools&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Smash Bros.&lt;/em&gt; has always been marketed by Nintendo as a primarily casual game, whereas chess may be considered to have a more serious player-base. So reaching the 99th percentile in online &lt;em&gt;Smash&lt;/em&gt; play is not as meaningful as reaching the 99th percentile in online chess play.&lt;/p&gt;

&lt;p&gt;In-person tournaments have a more serious self-selected pool of players. Since I quit my local chess club, and since COVID-19 shut down in-person &lt;em&gt;Smash&lt;/em&gt; tournaments, it’s hard for me to get a sense of how I compare in the competitive scene. My guess is that I’m below the 50th percentile among in-person tournament players for both games.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;h3 id=&quot;is-smash-a-better-use-of-my-time&quot;&gt;Is &lt;em&gt;Smash&lt;/em&gt; a better use of my time?&lt;/h3&gt;

&lt;p&gt;Certainly. Regardless of the absolute amount of time spent or the percentiles achieved, I managed to spend about the same amount of practice time in chess over five years as I did in &lt;em&gt;Smash&lt;/em&gt; over two years. This indicates that I naturally enjoy it a lot more, and I will probably be better at it as a result.&lt;/p&gt;

&lt;h3 id=&quot;can-i-reach-expert-strength-in-smash&quot;&gt;Can I reach expert strength in &lt;em&gt;Smash&lt;/em&gt;?&lt;/h3&gt;

&lt;p&gt;If we assume that it takes 10,000 hours of practice, then maybe. At the rate of 1200 practice hours over two years, one would expect that I could reach the 10,000 hour mark in about 6.3 years from now.&lt;/p&gt;

&lt;p&gt;A particular concern for competitive videogaming is that one can expect response times to &lt;a href=&quot;https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0094215&quot;&gt;start declining at the age of 24&lt;/a&gt;. I am 24 at the time of this writing, so I would be 30 years of age by the time I reached 10,000 hours, which will put me at a natural disadvantage compared to younger players. It might not be an insurmountable obstacle — it’s not as if 30-year-olds are known for their infamously-poor response times.&lt;/p&gt;

&lt;p&gt;One case-study is the &lt;em&gt;Super Smash Bros. Melee&lt;/em&gt; player &lt;a href=&quot;https://www.ssbwiki.com/Smasher:Zain&quot;&gt;Zain&lt;/a&gt;, who started playing competitively in 2014, and started producing top results within five years. It’s an encouraging result in terms of the absolute timeline. On the other hand, it’s possible that he simply practices around 3.5x as much as me (that is, 2000 hours a year, rather than 1200 hours in two years).&lt;/p&gt;

&lt;p&gt;Since &lt;em&gt;Smash&lt;/em&gt; is not as well developed as chess, it might be that I could reach an expert level in less time than the 10,000 hours. Or it simply might not require 10,000 hours.&lt;/p&gt;

&lt;h3 id=&quot;are-there-any-lessons-for-my-other-hobbies&quot;&gt;Are there any lessons for my other hobbies?&lt;/h3&gt;

&lt;p&gt;My piano-playing ability is quite poor at the moment. I would estimate I’ve spent around 300 total practice hours on it, since it took it up in November 2019. Unfortunately, I took no objective measurements.&lt;/p&gt;

&lt;p&gt;Unlike competitive videogaming, where one is matched to an opponent of similar strength, a piano player typically compares themselves to the best players in the field. It’s sometimes demoralizing to compare my performances of the same pieces with theirs. But it’s a relief to see that no matter how I feel now, I can expect to see significant improvements in ability as I reach even the 1000-hour mark.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Apr 2021 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/hours-invested-vs-percentile-rank/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/hours-invested-vs-percentile-rank/</guid>
        
        <category>chess</category>
        
        <category>deliberate-practice</category>
        
        <category>smash-bros</category>
        
        
      </item>
    
      <item>
        <title>On Pro Controller stick drift</title>
        <description>&lt;p&gt;The Nintendo Switch Pro Controller is one of the main controllers used for competitive &lt;em&gt;Smash Bros.&lt;/em&gt; play. Most players use either the Pro Controller or a GameCube controller.&lt;/p&gt;

&lt;p&gt;These controllers are prone to &lt;em&gt;stick drift&lt;/em&gt;: a phenomenon where inputs are registered for a control stick in a certain direction, despite the control stick being pressed in a different direction or not at all. As one can expect, this would significantly impair gameplay at the competitive level, and is frustrating at even the casual level.&lt;/p&gt;

&lt;p&gt;This post is a brief summary of stick drift problems, which may be relevant to those interested in playing &lt;em&gt;Smash Bros.&lt;/em&gt; (particularly &lt;em&gt;Ultimate&lt;/em&gt;) competitively.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#reputation&quot; id=&quot;markdown-toc-reputation&quot;&gt;Reputation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#warranty&quot; id=&quot;markdown-toc-warranty&quot;&gt;Warranty&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#my-experience&quot; id=&quot;markdown-toc-my-experience&quot;&gt;My experience&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#possible-causes&quot; id=&quot;markdown-toc-possible-causes&quot;&gt;Possible causes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prevention&quot; id=&quot;markdown-toc-prevention&quot;&gt;Prevention&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#manual-repair&quot; id=&quot;markdown-toc-manual-repair&quot;&gt;Manual repair&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reputation&quot;&gt;Reputation&lt;/h2&gt;

&lt;p&gt;Original GameCube controllers, produced contemporaneously with the original GameCube, have a reputation of rock-solid reliability. Many players use their old GameCube controllers to this day. At the time of this writing, such controllers sell for USD ~70 used or USD ~200 new on eBay and Amazon, which is significantly more than their original MSRP.&lt;/p&gt;

&lt;p&gt;Unfortunately, both modern Pro Controllers and GameCube controllers are plagued with reliability issues. The build quality in Nintendo’s controller manufacturing processes seems to have dropped significantly since the time of the original GameCube controller.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/NintendoSwitch/comments/cj0au7/has_anyone_experienced_drift_on_the_pro_controller/&quot;&gt;Anecdotal experiences with Pro Controller stick drift&lt;/a&gt; vary from “no issues after several hundred hours of use” to “several of my pro controllers have drift”. Generally, issues arise with the left control stick, which sees more use. See also &lt;a href=&quot;#my-experience&quot;&gt;My experience&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One could try a third-party controller. However, they are generally cheaper and have a reputation of inferior build quality, battery life, etc. They also tend to feel different than first-party Pro Controllers, so it may take a while to adjust when switching between them.&lt;/p&gt;

&lt;h2 id=&quot;warranty&quot;&gt;Warranty&lt;/h2&gt;

&lt;p&gt;In the US, the Pro Controller’s warrant period is only 30 days. This is a shameful support period time for a device that should last several years.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.beuc.eu/publications/beuc-x-2021-002_nintendo_-_premature_obsolescence_complaint_to_the_ec.pdf&quot;&gt;Complaints have been filed in the EU&lt;/a&gt; about Nintendo’s shoddy controllers, suggesting that controllers should last approximately the lifetime of the console itself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nintendo is thus artificially creating an aftermarket in a sector in which this should not be the case, in a sector in which the average consumer should not expect the lifespan for the game controllers to be more limited than that of the console and does in any event not take into account the eventual cost of repair or replacement of game controllers when buying the console.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can opt to have Nintendo repair a malfunctioning Pro Controller for around USD 30, or half the MSRP. Some players report that the problems persist even after sending their controller to Nintendo. At these prices, it may not make sense to risk a repair that might not fix the problem.&lt;/p&gt;

&lt;p&gt;Some vendors sell additional insurance for a small fee on top of the controller. Walmart offers up to 3 years of insurance for USD 7, which is a significantly better price than Nintendo’s offered repair price. I recently purchased a new Pro Controller from Target with the same insurance plan, but I have not yet filed a claim with it. This may be more economical than suffering through the official repair process. At my controller failure rates, this should be a good investment (see &lt;a href=&quot;#my-experience&quot;&gt;My experience&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;my-experience&quot;&gt;My experience&lt;/h2&gt;

&lt;p&gt;I have now purchased three Pro controllers, all of which have started exhibiting downward drifting of the left control stick by the 900-hour mark in &lt;em&gt;Smash Ultimate&lt;/em&gt;. So I go through them at a rate of about one controller (USD 60) per 300 hours.&lt;/p&gt;

&lt;p&gt;By now, they are all in various states of usability. One is completely unusable (the stick drifts down at all times), one has frequent stick drift (which makes it only reasonable for casual play), and one has mild stick drift (which I can use to practice, but which sometimes causes premature deaths anyways).&lt;/p&gt;

&lt;h2 id=&quot;possible-causes&quot;&gt;Possible causes&lt;/h2&gt;

&lt;p&gt;There are two main theories for stick drift in the Pro controller:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The analog stick sensor wheel component used in modern controllers is simply not durable compared to older controllers.&lt;/li&gt;
  &lt;li&gt;The grinding of the stick against the enclosure, particularly during mashing, causes an accumulation of white dust which impairs the sensor.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both are consistent with the left control stick being particularly vulnerable, since it sees significantly more use than the right control stick during normal play.&lt;/p&gt;

&lt;h2 id=&quot;prevention&quot;&gt;Prevention&lt;/h2&gt;

&lt;p&gt;To prevent the first issue, one could in principle replace the analog sensor immediately with a more reliable one, but I had difficulty doing this (see &lt;a href=&quot;#manual-repair&quot;&gt;Manual repair&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;To prevent the second issue, one can wrap the left control stick with a piece of tape, so that it doesn’t produce dust when grinding against its enclosure.&lt;/p&gt;

&lt;p&gt;I have also taken to labeling my controllers and using only a certain controller for competitive play. This ensures that load is primarily focused on one controller so as to diagnose stick drift more easily, as it starts out sporadically at first. It also leaves a maximum number of functioning controllers available for multiplayer casual play.&lt;/p&gt;

&lt;p&gt;One could also use one of the known-good controllers for tournaments to ensure there’s no stick drift at the least opportune time, while using one of the heavily-loaded controllers for practice, when it’s less of an issue.&lt;/p&gt;

&lt;h2 id=&quot;manual-repair&quot;&gt;Manual repair&lt;/h2&gt;

&lt;p&gt;To resolve the first issue by replacing the analog stick sensor wheel, I followed the guide at &lt;a href=&quot;https://www.reddit.com/r/NintendoSwitch/comments/bscoz9/nintendo_switch_pro_controller_analog_stick/&quot;&gt;Nintendo Switch Pro Controller PERMANENT Fix&lt;/a&gt;, but it &lt;strong&gt;did not&lt;/strong&gt; work for me. It claimed that the analog stick sensor wheel would not be soldered into place, and could be easily replaced. However, when I opened up my Pro Controller, I found that it was indeed soldered into place, so I couldn’t remove it.&lt;/p&gt;

&lt;p&gt;Nonetheless, the above document is still a good reference for Pro Controller internals and repair, as it includes instructions to open the Pro Controller and a discussion of the relevant components, with many pictures.&lt;/p&gt;

&lt;p&gt;To resolve the second issue, one can clean out dust and debris using electric contact cleaner or compressed air. This is a relatively cheap and simple fix to carry out, and many people have reported that it fixes their stick drift for a reasonable length of time.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Mar 2021 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/pro-controller-stick-drift/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/pro-controller-stick-drift/</guid>
        
        <category>smash-bros</category>
        
        
      </item>
    
      <item>
        <title>The USB-C dream</title>
        <description>&lt;p&gt;For work, I got one of the new Macbooks with only four USB-C ports. So, naturally, I need a dongle to connect it to my USB-A peripherals.&lt;/p&gt;

&lt;p&gt;I got a USB-C hub, which lets me connect an HDMI cable, my mouse and keyboard, and power cable to the laptop. So now I can connect my laptop to my workstation by plugging in only one wire (without the need for a specialized dock). This is actually more convenient than my previous setup with my personal laptop, where I had to connect the HDMI cable separately from the USB hub.&lt;/p&gt;

&lt;p&gt;One day, I plugged in my Android phone to the same USB hub to charge it. To my surprise, my monitor powered on. It turned out that it accepted mouse and keyboard inputs over the same hub, so I had a fully-functioning workstation!&lt;/p&gt;

&lt;p&gt;The idea is kind of nice, isn’t it? Like the &lt;a href=&quot;https://en.wikipedia.org/wiki/Nintendo_Switch&quot;&gt;Nintendo Switch&lt;/a&gt; gaming console, but for general-purpose computing.&lt;/p&gt;

&lt;p&gt;Suppose you’re having trouble with your work, so you unplug your device, walk over to your coworker’s desk, and plug it in right there to show them your issue.&lt;/p&gt;

&lt;p&gt;Or you’re working from home at your desk. You decide you need to go into the office, so you unplug your device, put it in your pocket, and get on the bus, where you continue to do mobile-capable work using your phone’s mobile data. And then you arrive at work and plug it back into a workstation.&lt;/p&gt;

&lt;p&gt;Or you’re working, and you need to read a document. So you unplug your device and walk over to the couch and get comfortable and read it there.&lt;/p&gt;

&lt;p&gt;Phones will have to get a little bit more powerful and flexible, and drivers will have to get a little bit more reliable — my Macbook still regularly crashes in its sleep, due to faulty power management of the USB hub. But I look forward to this future.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/the-usb-c-dream/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/the-usb-c-dream/</guid>
        
        <category>technology</category>
        
        
      </item>
    
      <item>
        <title>The Rust module system for Python users</title>
        <description>&lt;p&gt;Every time I go back to Rust, I have to figure out how the module system works again. Here are some of my notes comparing it to Python’s module system.&lt;/p&gt;

&lt;p&gt;These notes are for Rust 2018.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#crates&quot; id=&quot;markdown-toc-crates&quot;&gt;Crates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#packages&quot; id=&quot;markdown-toc-packages&quot;&gt;Packages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#file-layout&quot; id=&quot;markdown-toc-file-layout&quot;&gt;File layout&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#crate-roots&quot; id=&quot;markdown-toc-crate-roots&quot;&gt;Crate roots&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#module-lookups&quot; id=&quot;markdown-toc-module-lookups&quot;&gt;Module lookups&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#nested-modules&quot; id=&quot;markdown-toc-nested-modules&quot;&gt;Nested modules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;crates&quot;&gt;Crates&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;crate&lt;/strong&gt; is a build target in Rust. A crate can either be a library or a binary. It can be built with &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In Python, libraries are called “packages”. Binaries are an entirely heterogenous concept, typically installed by configuring &lt;a href=&quot;https://packaging.python.org/specifications/entry-points/&quot;&gt;entry points&lt;/a&gt;. Such a binary doesn’t even need to be Python code (for example, it can be a shell script instead).&lt;/p&gt;

&lt;h3 id=&quot;packages&quot;&gt;Packages&lt;/h3&gt;

&lt;p&gt;A &lt;strong&gt;package&lt;/strong&gt; in Rust consists of up to one library crate and any number of binary crates. (It’s required that there be at least one library or binary crate.)&lt;/p&gt;

&lt;p&gt;In Python, a single “distribution package” (i.e. one that you can &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install&lt;/code&gt;) can contain multiple “import packages” (i.e. one that you can &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;), while Rust allows at most one import package per distribution package.&lt;/p&gt;

&lt;h3 id=&quot;file-layout&quot;&gt;File layout&lt;/h3&gt;

&lt;h4 id=&quot;crate-roots&quot;&gt;Crate roots&lt;/h4&gt;

&lt;p&gt;Python places &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; at the root of a package to indicate that it’s importable as a package. Similarly, Rust conventionally puts &lt;code class=&quot;highlighter-rouge&quot;&gt;lib.rs&lt;/code&gt; at the root of a crate as the library &lt;strong&gt;crate root&lt;/strong&gt;. (Unlike Python, the name can be re-configured, but &lt;code class=&quot;highlighter-rouge&quot;&gt;lib.rs&lt;/code&gt; is the default.)&lt;/p&gt;

&lt;p&gt;In Python, &lt;code class=&quot;highlighter-rouge&quot;&gt;__main__.py&lt;/code&gt; corresponds to the main entry point for the module when run with &lt;code class=&quot;highlighter-rouge&quot;&gt;python -m&lt;/code&gt;. Rust conventionally puts &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; as a binary crate root. (This can also be renamed, which is probably desirable if you have more than one binary.)&lt;/p&gt;

&lt;h4 id=&quot;module-lookups&quot;&gt;Module lookups&lt;/h4&gt;

&lt;p&gt;In Python, all modules are available by importing them via their filesystem path name. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;import foo.bar&lt;/code&gt; first looks for a &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/&lt;/code&gt; directory on the &lt;code class=&quot;highlighter-rouge&quot;&gt;PYTHONPATH&lt;/code&gt;. Then it looks for a &lt;code class=&quot;highlighter-rouge&quot;&gt;bar/&lt;/code&gt; package or a &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.py&lt;/code&gt; module underneath the &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;In Rust, modules also correspond to their paths on the filesystem (by default; &lt;a href=&quot;https://doc.rust-lang.org/reference/items/modules.html#the-path-attribute&quot;&gt;you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; attribute&lt;/a&gt; to change this behavior). However, they are not immediately &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;-able just because the corresponding file is present! They must be declared with a &lt;code class=&quot;highlighter-rouge&quot;&gt;mod foo;&lt;/code&gt; declaration in the crate root file (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;lib.rs&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&quot;nested-modules&quot;&gt;Nested modules&lt;/h4&gt;

&lt;p&gt;In Python, a nested module &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.bar&lt;/code&gt; is implemented either by &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar.py&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar/__init__.py&lt;/code&gt;. You can’t use both. If you want to have sub-modules of &lt;code class=&quot;highlighter-rouge&quot;&gt;foo.bar&lt;/code&gt;, you’ll place additional modules or packages under &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A statement like &lt;code class=&quot;highlighter-rouge&quot;&gt;from foo.bar import qux&lt;/code&gt; could either be importing a symbol declared in &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar/__init__.py&lt;/code&gt; or the module &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar/qux.py&lt;/code&gt;. Some developers choose to explicitly re-export the public interface of &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__.py&lt;/code&gt; for clarity, and prefix sub-modules with underscores (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;_qux.py&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;qux.py&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In Rust, you use &lt;code class=&quot;highlighter-rouge&quot;&gt;foo/bar.rs&lt;/code&gt; to declare members of the namespace &lt;code class=&quot;highlighter-rouge&quot;&gt;foo::bar&lt;/code&gt;. If you also want to have sub-namespaces of bar (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;foo::bar::qux&lt;/code&gt;), then you additionally create the &lt;code class=&quot;highlighter-rouge&quot;&gt;bar/&lt;/code&gt; directory alongside &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.rs&lt;/code&gt;. To access a sub-namespace &lt;code class=&quot;highlighter-rouge&quot;&gt;qux&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.rs&lt;/code&gt;, the line &lt;code class=&quot;highlighter-rouge&quot;&gt;mod qux;&lt;/code&gt; must be added to &lt;code class=&quot;highlighter-rouge&quot;&gt;bar.rs&lt;/code&gt;. (This is similar to how we have to add &lt;code class=&quot;highlighter-rouge&quot;&gt;mod foo;&lt;/code&gt; at the top-level &lt;code class=&quot;highlighter-rouge&quot;&gt;lib.rs&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;To re-export the namespace and make it available to all users outside of &lt;code class=&quot;highlighter-rouge&quot;&gt;bar&lt;/code&gt;, it should be changed to &lt;code class=&quot;highlighter-rouge&quot;&gt;pub mod qux;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The main take-away is that Rust requires the explicit re-exporting of nested modules using &lt;code class=&quot;highlighter-rouge&quot;&gt;mod&lt;/code&gt; at each step of the hierarchy, while Python does not.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jan 2021 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/rust-modules-for-python-users/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/rust-modules-for-python-users/</guid>
        
        <category>python</category>
        
        <category>rust</category>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Smash Training retrospective</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://ssb.fit&quot;&gt;&lt;em&gt;Smash Training&lt;/em&gt;&lt;/a&gt; is a spaced-repetition training web-app I created to help my progression with &lt;em&gt;Super Smash Bros. Ultimate&lt;/em&gt;. I released it on May 16, 2020 &lt;a href=&quot;https://www.reddit.com/r/CrazyHand/comments/gkybpe/trying_to_get_into_elite_smash_this_quarantine/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&quot;&gt;on Reddit&lt;/a&gt; to warm reception. As of December 2020, it receives 150-200 monthly users. I’d rank it as my most successful project!&lt;/p&gt;

&lt;p&gt;In this article, I discuss the choices I made for this project. The source code is available at &lt;a href=&quot;https://github.com/arxanas/smashtraining&quot;&gt;https://github.com/arxanas/smashtraining&lt;/a&gt;.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#project-requirements&quot; id=&quot;markdown-toc-project-requirements&quot;&gt;Project requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#domain-name&quot; id=&quot;markdown-toc-domain-name&quot;&gt;Domain name&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#user-studies-and-ui&quot; id=&quot;markdown-toc-user-studies-and-ui&quot;&gt;User studies and UI&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ui&quot; id=&quot;markdown-toc-ui&quot;&gt;UI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#documentation&quot; id=&quot;markdown-toc-documentation&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tech-stack&quot; id=&quot;markdown-toc-tech-stack&quot;&gt;Tech stack&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#build-system&quot; id=&quot;markdown-toc-build-system&quot;&gt;Build system&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#typescript&quot; id=&quot;markdown-toc-typescript&quot;&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vue&quot; id=&quot;markdown-toc-vue&quot;&gt;Vue&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vuetify&quot; id=&quot;markdown-toc-vuetify&quot;&gt;Vuetify&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#netlify-for-hosting&quot; id=&quot;markdown-toc-netlify-for-hosting&quot;&gt;Netlify for hosting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#custom-database&quot; id=&quot;markdown-toc-custom-database&quot;&gt;Custom database&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#github-as-a-static-data-store&quot; id=&quot;markdown-toc-github-as-a-static-data-store&quot;&gt;Github as a static data-store&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusions&quot; id=&quot;markdown-toc-conclusions&quot;&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-requirements&quot;&gt;Project requirements&lt;/h2&gt;

&lt;p&gt;I decided that I wanted to build a spaced-repetition training app, rather than reuse a general-purpose spaced-repetition flash-card system such as Anki, because the project would benefit from domain-specific knowledge. For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Exercises have large numbers of variants, such as “short-hop” vs “full-hop”, or “facing left” vs “facing right”, which should be tracked separately.&lt;/li&gt;
  &lt;li&gt;Many of the exercises have natural dependencies on others: they shouldn’t be attempted unless a certain underlying fundamental skill has been mastered.&lt;/li&gt;
  &lt;li&gt;Exercises to train one character don’t necessarily confer the same skill for other characters. Some exercises may only be applicable to some characters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I decided to make an app to automate the spaced repetition regimen I was attempting to follow by hand, which I could then share with others.&lt;/p&gt;

&lt;p&gt;Here were my engineering requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Should be mobile-first, but preferably also available on desktop.&lt;/li&gt;
  &lt;li&gt;Should be local-first, or at least not require creating an account to use.&lt;/li&gt;
  &lt;li&gt;Should be architected to support sync between devices, although the sync itself was not a requirement for the first iteration.&lt;/li&gt;
  &lt;li&gt;Should have approximately zero hosting costs.&lt;/li&gt;
  &lt;li&gt;Should be hosted on of a stable platform which doesn’t require monitoring (e.g. not my home computer).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;domain-name&quot;&gt;Domain name&lt;/h2&gt;

&lt;p&gt;I wanted to choose between a permutation like the following for the domain name:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;smashtraining.com&lt;/li&gt;
  &lt;li&gt;ssbtraining.com&lt;/li&gt;
  &lt;li&gt;smash.training&lt;/li&gt;
  &lt;li&gt;ssb.training&lt;/li&gt;
  &lt;li&gt;smash.fit&lt;/li&gt;
  &lt;li&gt;ssb.fit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;ssb.fit&lt;/code&gt; because 1) &lt;code class=&quot;highlighter-rouge&quot;&gt;smash.training&lt;/code&gt; got taken (!) and 2) I wanted to optimize for typing it in on a mobile device, even though the name is less memorable. This lack of memorability unfortunately manifested in &lt;a href=&quot;https://www.reddit.com/r/CrazyHand/comments/gp9sem/wtf_was_that_smash_training_website_called/frkscwe/?context=3&quot;&gt;this Reddit thread titled “WTF was that smash training website called?”&lt;/a&gt;. However, another commenter writes “ssb.fit is better, short for mobile”, perhaps vindicating the original choice.&lt;/p&gt;

&lt;p&gt;It’s unfortunate that the domain name and the website title don’t exactly match up. Many people seemed to address it as “ssb.fit” hence, so maybe that’s what the project should have been called too (rather than “Smash Training”).&lt;/p&gt;

&lt;h2 id=&quot;user-studies-and-ui&quot;&gt;User studies and UI&lt;/h2&gt;

&lt;p&gt;I conducted several user studies with friends and family, including some people who had played Smash before and some who hadn’t.&lt;/p&gt;

&lt;h3 id=&quot;ui&quot;&gt;UI&lt;/h3&gt;

&lt;p&gt;The first main thing I iterated on was the design of the exercise tracker widget. I originally based it off of the &lt;em&gt;Stronglifts&lt;/em&gt; app:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-training-retrospective/stronglifts.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-training-retrospective/stronglifts.png&quot; alt=&quot;Advertisement screenshot of the Stronglifts workout app.&quot; title=&quot;Advertisement screenshot of the Stronglifts workout app.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Advertisement screenshot of the Stronglifts workout app.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Stronglifts&lt;/em&gt; has you note down how many repetitions of the exercise you succeeded at (out of five). However, the &lt;em&gt;Smash Training&lt;/em&gt; paradigm is different, and has you repeat the exercise for a length of time and rate your accuracy.&lt;/p&gt;

&lt;p&gt;I experimented with a “smiley-face” UI rather than a rep-count UI, as in Stronglifts, along with a few other options. After a lot of feedback from friends, I arrived at a slider-based widget like this:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-training-retrospective/smash-training-exercise-widget.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-training-retrospective/smash-training-exercise-widget.png&quot; alt=&quot;Screenshot of the Smash Training exercise widget.&quot; title=&quot;Screenshot of the Smash Training exercise widget.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Screenshot of the Smash Training exercise widget.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;This uses a slider approach (with five possible notches), and renders a description of what each notch corresponds to, i.e. “all or nearly all reps correct”.&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;The second main thing was the ordering of the elements in the “Learn exercise” page. Each exercise has a step-by-step description of how to do the exercise, what controller inputs must be performed, background on the technique and its importance, a video tutorial, etc.&lt;/p&gt;

&lt;p&gt;My assumption was that most people would read very little of it, so I should put the most important items first. However, various users disagreed on which item was the most important. There was no strong consensus, but the end result was this ordering:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Step-by-step exercise description.&lt;/li&gt;
  &lt;li&gt;Controller inputs.&lt;/li&gt;
  &lt;li&gt;Technique overview.&lt;/li&gt;
  &lt;li&gt;The rest of the documentation elements (not as important).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were also hints on these steps such as how to enter the Training Stage to perform the exercises. Some users missed these steps altogether, and were left confused on how to perform the exercise. Unfortunately, I was unable to design a UI that mitigated this problem.&lt;/p&gt;

&lt;h2 id=&quot;tech-stack&quot;&gt;Tech stack&lt;/h2&gt;

&lt;p&gt;I chose to write a web-app, since they are cross-platform and I already had some familiarity with the area. In particular, I didn’t want to spend money on an iOS developer license, but I also didn’t want to exclude iOS users. (Post-hoc analytics indicate that the ratio of Android-to-iOS users is about 2:1, which consitutes a significant cohort for iOS.)&lt;/p&gt;

&lt;h3 id=&quot;build-system&quot;&gt;Build system&lt;/h3&gt;

&lt;p&gt;All Javascript web-app bundling solutions are fundamentally terrible, and Webpack is no exception. But it works.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/arxanas/smashtraining/commit/f621f02af95da697435cb720563b590d57f38b87&quot;&gt;I encountered one mysterious bug in Babel during development&lt;/a&gt;, which I was unable to isolate. I worked around it by targeting only newer browsers, after which the problem disappeared.&lt;/p&gt;

&lt;p&gt;I used &lt;code class=&quot;highlighter-rouge&quot;&gt;vue-cli-service&lt;/code&gt; as a wrapper around the build, test, and lint actions, as recommended by Vue. But I found it hard to configure and debug. When I had an issue with tests not properly compiling an imported module, &lt;a href=&quot;https://github.com/arxanas/smashtraining/blame/d0c31a33ab880e8c58824c0f58247c8bd8f38485/src/utils.ts#L38-L44&quot;&gt;I gave up and reimplemented the function I needed myself&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;typescript&quot;&gt;TypeScript&lt;/h3&gt;

&lt;p&gt;I also used &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, since I find its static typing system useful for maintenance purposes.&lt;/p&gt;

&lt;p&gt;TypeScript support for Vue was not ideal. Many Vue patterns are not easy to express in TypeScript. Libraries like &lt;a href=&quot;https://github.com/istrib/vuex-typescript&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vuex-typescript&lt;/code&gt;&lt;/a&gt; exist, but require a lot of boilerplate in order to get static typing support. The &lt;a href=&quot;https://github.com/paroi-tech/direct-vuex&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;direct-vuex&lt;/code&gt;&lt;/a&gt; library had less boilerplate, but &lt;a href=&quot;https://github.com/arxanas/smashtraining/commit/9a8c0c0baf05d048a564b11f62afdfafc9f66a62&quot;&gt;I couldn’t figure out how to test it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TypeScript was generally pleasant to work with, although in the project, I pushed it to its extremes and it was unable to keep pace. In my case, it was unable to track associated/mapped types adequately. It’s perhaps exemplified by this &lt;code class=&quot;highlighter-rouge&quot;&gt;@ts-ignore&lt;/code&gt; comment:&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TechVariantOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TechId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// @ts-ignore &quot;Type 'x' cannot be used to index type 'AllTechVariants'.&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Strangely, the correct type is calculated here anyways, and can be used for&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// exhaustiveness-checking later.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AllTechMetadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;variants&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AllTechVariants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also ran into &lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/13215#issuecomment-531632919&quot;&gt;this issue&lt;/a&gt; when working on the same thing.&lt;/p&gt;

&lt;p&gt;Given that this is reasonably advanced type-level hackery, I was generally happy with TypeScript’s ability to describe the data domain.&lt;/p&gt;

&lt;h3 id=&quot;vue&quot;&gt;Vue&lt;/h3&gt;

&lt;p&gt;I chose to use &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; as the front-end web framework, since I had heard good things about it from &lt;a href=&quot;https://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt;. In particular, I wanted an opinionated framework, so as to spend less time configuring things myself.&lt;/p&gt;

&lt;p&gt;When I used it, Vue promoted the &lt;a href=&quot;https://vuejs.org/v2/guide/single-file-components.html&quot;&gt;“single-file component”&lt;/a&gt; system, in which HTML, CSS, and Javascript are mixed into the same file. It was not a great experience:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This complicates the build process, as something has to convert these single-file components into assets consumable by the browser.&lt;/li&gt;
  &lt;li&gt;The mental model is an extra layer of indirection, as these single-file components are themselves compiled into Javascript classes, but also contain Javascript classes in the script portion of the file.&lt;/li&gt;
  &lt;li&gt;The tooling support was poor. For example, go-to-definition doesn’t work on the HTML components, despite the fact that they’re ultimately backed by Javascript classes.&lt;/li&gt;
  &lt;li&gt;TypeScript does not check the HTML components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would have preferred to use a &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/jsx.html&quot;&gt;JSX&lt;/a&gt; solution, as it removes some of the indirection and has better tooling support.&lt;/p&gt;

&lt;p&gt;I wish Vue had fewer ways to do things. For example, attributes on HTML elements can be set with the normal &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; syntax, but also with a leading &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; (expression evaluation) or a leading &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; (callback) for brevity. In comparison, React with JSX only has &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; for all of these situations.&lt;/p&gt;

&lt;h3 id=&quot;vuetify&quot;&gt;Vuetify&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://vuetifyjs.com/&quot;&gt;Vuetify&lt;/a&gt; is a library to provide Material Design UI for Vue. The presence of a solid, all-in-one Material Design library was one other reason why I chose to use Vue. The library and documentation are both very good, and I was able to prototype my app (from a UI perspective) effectively. I would strongly recommend it if you’re using Vue.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuetifyjs/vuetify/pull/8877&quot;&gt;I opened one pull request&lt;/a&gt; for the documentation, which was merged promptly, &lt;a href=&quot;https://github.com/vuetifyjs/vuetify/issues/10140&quot;&gt;and +1’d one documentation issue&lt;/a&gt;, which has a workaround but unfortunately remains unresolved.&lt;/p&gt;

&lt;h3 id=&quot;netlify-for-hosting&quot;&gt;Netlify for hosting&lt;/h3&gt;

&lt;p&gt;I used &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; to host the front-end of the website using its free tier, and stored data locally for the user. This worked well, as Netlify knew how to build and deploy my Vue project, and had good Github integrations.&lt;/p&gt;

&lt;p&gt;Another option would have been Github Pages, which would have made the project dependent on fewer underlying services, but also would have required me to write a build step of my own.&lt;/p&gt;

&lt;h3 id=&quot;custom-database&quot;&gt;Custom database&lt;/h3&gt;

&lt;p&gt;I stored data locally on the client using the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Window/localStorage&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;localStorage&lt;/code&gt; APIs&lt;/a&gt;. I was careful to design the data schema such that it was append-only and such that each record had a unique ID, the idea being to make it easy to merge changes from multiple clients. However, this alone makes it difficult to delete records without some more thought.&lt;/p&gt;

&lt;p&gt;I later discovered &lt;a href=&quot;https://couchdb.apache.org/&quot;&gt;CouchDB&lt;/a&gt; as a distributed document-store in exactly the manner I had already architected my application, but including sync and delete capabilities. I also discovered the &lt;a href=&quot;https://pouchdb.com/&quot;&gt;PouchDB&lt;/a&gt; library, which exposes a CouchDB interface and allows you to store your data locally or sync it remotely. It also supports more backends than just &lt;code class=&quot;highlighter-rouge&quot;&gt;localStorage&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I wish I had used PouchDB from the beginning! Now I’m stuck with an inefficient, feature-lacking implementation of it, which would require some migration effort to move onto PouchDB.&lt;/p&gt;

&lt;h3 id=&quot;github-as-a-static-data-store&quot;&gt;Github as a static data-store&lt;/h3&gt;

&lt;p&gt;I scraped a public service called &lt;a href=&quot;https://www.elitegsp.com/&quot;&gt;Elite GSP&lt;/a&gt; to accumulate historical ranking data (called “Global Smash Power” or GSP), so that the user could track their ranking progress over time compared to others.&lt;/p&gt;

&lt;p&gt;To avoid having to host a database somewhere, I decided to check in the records directly into source control, which would then be distributed by Netlify. I set up a job on my personal webserver to do so. In the worst case, if the webserver goes down and stops updating the Git repository, the stale data would still be reasonably useful, and the job could be started again at any time. Currently, the job runs once a day.&lt;/p&gt;

&lt;p&gt;I wish I had known that it were possible to commit to the repo in question using Github Actions, as described in the post &lt;a href=&quot;https://simonwillison.net/2020/Oct/9/git-scraping/&quot;&gt;&lt;em&gt;Git scraping: track changes over time by scraping to a Git repository&lt;/em&gt;&lt;/a&gt;. I definitely would have done so rather than rely on my own webserver’s availability to do so.&lt;/p&gt;

&lt;p&gt;All these automated commits caused the commit history to become rather polluted. I then made the choice to amend the most recent commit if it was a database-update commit, rather than make a new one.&lt;/p&gt;

&lt;p&gt;This is rewriting public history and technically frowned upon, as it requires all downstream developers to rebase their changes onto master if the scraping job has run recently. But the rebases are typically conflict-free, as the rewritten commit only changes a machine-generated file, so this wasn’t a problem in practice.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;The zero-hosting web-app is pretty feasible for local-first web applications. I imagine it would be harder if your app required users to be able to interact with each other, and therefore support authentication/authorization for data access.&lt;/p&gt;

&lt;p&gt;Most of my friction was around attempting to describe things statically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vue didn’t have good support for TypeScript.&lt;/li&gt;
  &lt;li&gt;A couple pieces of Vuetify documentation were missing important information.&lt;/li&gt;
  &lt;li&gt;Using automated hooks to run deployment services instead of my own webserver is a much more convenient and declarative approach, in that I don’t have to manage any machines myself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;User studies proved invaluable. Thanks to all my friends who participated.&lt;/p&gt;

&lt;p&gt;This project was a success for me, because 1) I solved a problem I had; 2) I solved a problem that others had; and 3) I reduced my maintenance burden to the absolute minimum — I haven’t had any deployment issues since launching it.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/smash-training-retrospective/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/smash-training-retrospective/</guid>
        
        <category>smash-bros</category>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Smash Bros: the parabola rule</title>
        <description>&lt;p&gt;This is a simple mistake that I used to make as a beginner. It took surprisingly long to realize the precise nature of the mistake, so I’m posting about it here.&lt;/p&gt;

&lt;p&gt;Suppose you’re landing and trying to avoid an opponent. You want to avoid their “threat bubble” while landing: the maximum range that their attacks can reach in the time it takes you to land.&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-bros-the-parabola-rule/1-threat-bubble.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-bros-the-parabola-rule/1-threat-bubble.png&quot; alt=&quot;The red player is in the air, while the blue player is on the ground, projecting a threat bubble.&quot; title=&quot;The red player is in the air, while the blue player is on the ground, projecting a threat bubble.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;The red player is in the air, while the blue player is on the ground, projecting a threat bubble.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;So naturally, you drift to the side to avoid their threat bubble.&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-bros-the-parabola-rule/2-landing-arc.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-bros-the-parabola-rule/2-landing-arc.png&quot; alt=&quot;Red player's planned trajectory, drifting to the side to avoid the blue player.&quot; title=&quot;Red player's planned trajectory, drifting to the side to avoid the blue player.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Red player&amp;#8217;s planned trajectory, drifting to the side to avoid the blue player.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;The ideal landing position would be as close to center stage as possible, while still staying outside of their threat bubble.&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-bros-the-parabola-rule/3-threat-bubble-and-circular-arc.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-bros-the-parabola-rule/3-threat-bubble-and-circular-arc.png&quot; alt=&quot;The red player's expected trajectory is tangent to the blue player's threat bubble. The trajectory does not pass through the threat bubble, meaning that it's a safe landing: the blue player cannot reach the red player and hit them as they land.&quot; title=&quot;The red player's expected trajectory is tangent to the blue player's threat bubble. The trajectory does not pass through the threat bubble, meaning that it's a safe landing: the blue player cannot reach the red player and hit them as they land.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;The red player&amp;#8217;s expected trajectory is tangent to the blue player&amp;#8217;s threat bubble. The trajectory does not pass through the threat bubble, meaning that it&amp;#8217;s a safe landing: the blue player cannot reach the red player and hit them as they land.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;So what’s wrong with this image? It’s hard to tell, but the problem is that it depicts a &lt;strong&gt;circular landing arc&lt;/strong&gt;. But characters in &lt;em&gt;Smash Bros.&lt;/em&gt; don’t typically travel in circular arcs. At the top of the arc, your velocity will be close to zero horizontally, and you’ll be increasing it as gravity pulls you downward. With a circle, your velocity stays the same, but your direction changes the entire way down.&lt;/p&gt;

&lt;p&gt;The actual trajectory of the player is closer to a parabola. Let’s look at what a parabolic arc might look like.&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-bros-the-parabola-rule/4-threat-bubble-and-parabolic-arc.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-bros-the-parabola-rule/4-threat-bubble-and-parabolic-arc.png&quot; alt=&quot;The red player's *actual* trajectory is a wider arc. Notice that the landing position is farther away from the blue player than in the previous diagram.&quot; title=&quot;The red player's *actual* trajectory is a wider arc. Notice that the landing position is farther away from the blue player than in the previous diagram.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;The red player&amp;#8217;s &lt;em&gt;actual&lt;/em&gt; trajectory is a wider arc. Notice that the landing position is farther away from the blue player than in the previous diagram.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;There’s a constant downward force provided by gravity, accelerating you to a maximum downward velocity. However, your horizontal velocity increases as you go farther down. Furthermore, as you pass the point where your trajectory intersects the threat bubble, you’ll want to reverse your acceleration to be &lt;em&gt;towards&lt;/em&gt; center stage, so that you give up as little space as possible to the opponent.&lt;/p&gt;

&lt;p&gt;If we thought that our trajectory was circular, not parabolic, and tried to aim towards the same “safe” spot on the ground as in the previous circular arc diagram, we would actually slightly enter the opponent’s threat bubble:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/smash-bros-the-parabola-rule/5-threat-bubble-and-real-circular-arc.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/smash-bros-the-parabola-rule/5-threat-bubble-and-real-circular-arc.png&quot; alt=&quot;If the red player aims towards the circular arc's landing position, but actually has a parabolic arc, then they'll slightly pass through the blue player's threat bubble.&quot; title=&quot;If the red player aims towards the circular arc's landing position, but actually has a parabolic arc, then they'll slightly pass through the blue player's threat bubble.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;If the red player aims towards the circular arc&amp;#8217;s landing position, but actually has a parabolic arc, then they&amp;#8217;ll slightly pass through the blue player&amp;#8217;s threat bubble.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;This difference is so minute, it’s easy to not realize what’s going on with your player’s trajectory, and get hit while landing.&lt;/p&gt;

&lt;p&gt;To fix this problem, we need to apply &lt;strong&gt;the parabola rule&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aim for a spot farther away on the ground than you think is appropriate (until you’ve internalized how far away is actually appropriate).&lt;/li&gt;
  &lt;li&gt;DI outwards all the way down, until you reach the tangent point between your arc and your opponent’s threat bubble. Then you are free to start DI-ing inwards.&lt;/li&gt;
  &lt;li&gt;Do not fast-fall until you’ve cleared the tangent point! Otherwise, you may accidentally fall through the threat bubble earlier than expected.
    &lt;ul&gt;
      &lt;li&gt;This issue is something I’m still working on. Fast-falling gets you to the ground faster, so it intuitively feels safer (particularly considering that I main a fast-falling character). But it can actually be a worse choice than drifting as far as possible away from the opponent, and not fast-falling at all.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 04 Aug 2020 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/smash-bros-parabola-rule/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/smash-bros-parabola-rule/</guid>
        
        <category>smash-bros</category>
        
        
      </item>
    
      <item>
        <title>A LAN adapter isn't everything</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#on-online-mode&quot; id=&quot;markdown-toc-on-online-mode&quot;&gt;On online mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#playing-on-wi-fi&quot; id=&quot;markdown-toc-playing-on-wi-fi&quot;&gt;Playing on Wi-Fi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;on-online-mode&quot;&gt;On online mode&lt;/h2&gt;

&lt;p&gt;I’ve been getting into &lt;em&gt;Super Smash Bros. Ultimate&lt;/em&gt;, and I want to play competitively once COVID-19 is over.&lt;/p&gt;

&lt;p&gt;The best I can do for now is to play online. However, &lt;em&gt;Ultimate&lt;/em&gt;’s online play is notoriously bad:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.polygon.com/2018/12/14/18140814/super-smash-bros-ultimate-input-lag-latency-feel&quot;&gt;The input lag is around 98 ms (~6 frames)&lt;/a&gt;, which is on the high end for a fighting game (&lt;a href=&quot;http://shoryuken.com/2018/10/19/soulcalibur-vi-input-lag-tested-and-its-comparable-to-street-fighter-v/&quot;&gt;the highest listed in this article&lt;/a&gt; is &lt;em&gt;Samurai Showdown&lt;/em&gt; with 94ms input lag).&lt;/li&gt;
  &lt;li&gt;The game uses delay-based netcode instead of rollback-based netcode, which means that inputs are delayed until all participants have acknowledged them, rather than speculatively executed.&lt;/li&gt;
  &lt;li&gt;The game uses peer-to-peer connections rather than centralized servers, which means that all parties are punished for a single party’s lag. This is a problem in both one-on-one play and in the Battle Arena format, where many participants may join, and the quality of the game is determined by the worst internet connection. (NB: a peer-to-peer connection can also have theoretically better performance if the route between players is shorter than a given player’s route to the server.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;playing-on-wi-fi&quot;&gt;Playing on Wi-Fi&lt;/h2&gt;

&lt;p&gt;There’s two main arrangements recommended to combat lag:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use a LAN adapter for the Nintendo Switch, rather than relying on Wi-Fi.&lt;/li&gt;
  &lt;li&gt;Use a low-latency display (particularly one set to “Game Mode”, if available).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I used to play with a LAN adapter on my living room TV, under the assumption that having a wired connection was more important than having a low-latency display. Then I tried playing with my Switch on a small monitor at my work setup over Wi-Fi. What I discovered is that the opposite was true in my case: &lt;strong&gt;having a low-latency display produced better gameplay than having a wired internet connection&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Wi-Fi can be deployed in one or both of two bands: 2.4 GHz and 5 GHz. &lt;a href=&quot;https://blog.parsecgaming.com/how-your-wifi-band-impacts-low-latency-connections-9f1e538a63dd&quot;&gt;In this article by Parsec&lt;/a&gt;, they demonstrate that 5 GHz actually has quite low latency:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/lan-adapter/wifi-latency.jpeg&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/lan-adapter/wifi-latency.jpeg&quot; alt=&quot;Graph comparing latencies of 2.4 GHz Wi-Fi, 5 GHz Wi-Fi, and wired connection.&quot; title=&quot;Graph comparing latencies of 2.4 GHz Wi-Fi, 5 GHz Wi-Fi, and wired connection.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;This diagram indicates the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As a baseline, a wired connection has around 1 ms latency.&lt;/li&gt;
  &lt;li&gt;2.4 GHz Wi-Fi can have huge spikes in latency, routinely hitting 30 ms in their testing.&lt;/li&gt;
  &lt;li&gt;5 GHz reliably stays at around 5 ms latency, and in the worst case, only hits&lt;/li&gt;
  &lt;li&gt;about 8 ms latency.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So 5 GHz Wi-Fi is definitely worse than a wired connection, but not by much. For context, 8 ms is about half a frame, so it would be barely noticeable in practice.&lt;/p&gt;

&lt;p&gt;The display you use also can make a big difference. &lt;a href=&quot;https://www.rtings.com/monitor/tests/inputs/input-lag&quot;&gt;Gaming monitors might have on the order of 10 ms lag&lt;/a&gt;. My living room TV is an awful 70-inch Samsung smart TV, and I have nothing but bad things to say about it. Besides smart TVs being inherently bad, this particular TV was not marketed as a gaming display, and it seems to have a huge amount of latency, even with Game Mode enabled.&lt;/p&gt;

&lt;p&gt;The difference became noticeable only now that I’m playing at a higher level than before. &lt;a href=&quot;https://www.elitegsp.com/&quot;&gt;elitegsp.com&lt;/a&gt; currently estimates me at the 98th percentile of online players. (My guess is that this would be around the 40th or 50th percentile for in-person players).&lt;/p&gt;

&lt;p&gt;After switching to a better monitor, I find I can suddenly react to things I was unable to before. I can catch ledge get-up options more reliably; I’ve started being able to jump over to Samus’s fully-charged charge shots, etc., on reaction, which has never happened before; some of my tight combos even seem more reliable.&lt;/p&gt;

&lt;p&gt;So Wi-Fi online play needn’t be that bad!&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2020 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/lan-adapter/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/lan-adapter/</guid>
        
        <category>smash-bros</category>
        
        
      </item>
    
      <item>
        <title>I used to run my own mail server</title>
        <description>&lt;p&gt;I used to run my own mail server on this domain. That’s because I receive email at this domain, and being a student at the time, I didn’t want to pay an additional cost for an email service on top of the domain and hosting costs.&lt;/p&gt;

&lt;p&gt;It was surprisingly complex. After a lot of frustrating debugging, I installed and configured Postfix and Dovecot. Looking back at it now, maybe I can understand a little of the awful mail situation that the authors of &lt;a href=&quot;https://web.mit.edu/~simsong/www/ugh.pdf&quot;&gt;The UNIX-HATERS Handbook&lt;/a&gt; lamented.&lt;/p&gt;

&lt;p&gt;I also had Logwatch configured on my server, which sends daily log digests to my personal Gmail address. One day, I got a much larger email than usual, with about 500 entries of this form:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=100, msgid=&amp;lt;1916378978.228657.1422669964925.JavaMail.s605113@s605113nj3cu23.uspswy6.savv..., size=3846: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=101, msgid=&amp;lt;1249814308.228946.1422670382174.JavaMail.s605113@s605113nj3cu23.uspswy6.savv..., size=5784: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=102, msgid=&amp;lt;601365427.63734562.1422671000015.JavaMail.jobnotification@noreply.jobs2web.com&amp;gt;, size=3576: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=103, msgid=&amp;lt;87573488.39381.1422671386061.JavaMail.rcc@127.0.0.1&amp;gt;, size=8427: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=104, msgid=&amp;lt;1193028303.63734619.1422671449632.JavaMail.jobnotification@noreply.jobs2web...., size=8061: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=105, msgid=&amp;lt;1643814520.773962.1422671831522.JavaMail.app@ltx1-app10243.prod&amp;gt;, size=28350: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=106, msgid=&amp;lt;30128166.20150131023820.54cc401cc8ef84.75123093@mail149.wdc04.mandrillapp.com&amp;gt;, size=25278: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=107, msgid=&amp;lt;d33d663bb8154e91ad366791d6415e4c@verona-exch-2.epic.com&amp;gt;, size=8389: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=108, msgid=&amp;lt;201502030243.t132hp8Q025750@goon4.epic.com&amp;gt;, size=2416: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=109, msgid=&amp;lt;20150203183535.BD0B2AF0001@prod-batch01.recsolu.com&amp;gt;, size=11568: 1 Time(s)
dovecot: imap(me@waleedkhan.name): expunge: box=INBOX, uid=110, msgid=&amp;lt;1968774189.2003704.1422991430758.JavaMail.app@lva1-app3310.prod&amp;gt;, size=27061: 1 Time(s)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I didn’t really know what “expunge” means in technical terms, except that it sounds like deletion, and I certainly didn’t know what triggered 500 of them. (I still don’t.) When I feverishly logged into my email account, I found that a huge chunk of mail indeed seemed to be missing. I wasn’t able to recover them from my server’s disk. I thought I had backups, but I discovered that day that I had apparently failed to enable DigitalOcean’s backup service for my server.&lt;/p&gt;

&lt;p&gt;At the time, I was interviewing for internships. In fact, I lost the offer letter I had intended to accept, and had to ask the recruiter to re-send it. I imagine it wasn’t a very professional look!&lt;/p&gt;

&lt;p&gt;I tried to be a responsible system administrator, but clearly I didn’t have the time or attention to do so effectively. Now I happily pay $5 a month for a professional service to manage my email — reliably.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Apr 2020 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/mail-server/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/mail-server/</guid>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Monotonicity is a halfway point between mutability and immutability</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Immutable values are easy to reason about in complex systems, because they never change. Many functional languages strongly encourage the developer to use immutable values. For example, Clojure has a strong emphasis on using immutable values, so that multithreading can be made easy and safe.&lt;/p&gt;

&lt;p&gt;However, making everything immutable can be impractical, especially in established codebases with poor language-level support for immutability-by-default. Some modern languages with good support for immutable values still let you opt into mutable data when needed (such as Rust with the &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;/code&gt; keyword).&lt;/p&gt;

&lt;p&gt;In this article, I describe a property called &lt;em&gt;monotonicity&lt;/em&gt;, which is a halfway point between mutable and immutable values. Structuring your code around monotonicity can make it easier to reason about values without having to make them immutable, even in languages with good support for immutable values.&lt;/p&gt;

&lt;p&gt;The concepts in this article are probably obvious to anyone who took a databases course in college, but I didn’t!&lt;/p&gt;

&lt;h2 id=&quot;what-is-monotonicity&quot;&gt;What is monotonicity?&lt;/h2&gt;

&lt;p&gt;A “monotonic” value is a value for which information is always added, never removed. You could consider it a sort of “append-only” data structure. It rests between mutability and immutability in that you can still change it by adding information (which may change the meaning of the data), but data is never lost.&lt;/p&gt;

&lt;h2 id=&quot;simple-values&quot;&gt;Simple values&lt;/h2&gt;

&lt;p&gt;Suppose that we’re modeling a user. We could store the user’s name as a single field in a structure:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When we want to update the name, we can modify it in-place:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This &lt;strong&gt;loses data&lt;/strong&gt;, specifically the old version of the name. In enterprise systems, you can imagine wanting an “audit log” that would let you examine changes that occurred to the system. We can use a monotonic value to accomplish this. Instead of storing a single name, we’ll store &lt;em&gt;all&lt;/em&gt; the names that the user has ever had, and return the last one as the user’s canonical name:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;property&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now an administrator can view all of the historical names for a user. (In a real system, we would also store the person who did the action, the time, etc.).&lt;/p&gt;

&lt;p&gt;This is also useful for non-enterprise-systems. If a user loses data somehow (either due to the user’s accident or due to a bug in the code), then an administrator can manually reconstruct the data by looking at the history of the value.&lt;/p&gt;

&lt;h2 id=&quot;memoized-values&quot;&gt;Memoized values&lt;/h2&gt;

&lt;p&gt;Memoized (“lazy”) values are another common use-case for monotonicity. Sometimes, computation might be deferred until you need it, and once it’s completed, it can be re-used for future requests:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_profile_from_disk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mutable state can be difficult to reason about at times, but in the case of a memoized value, it’s hardly considered mutable at all. Once the value is loaded, it’s never changed.&lt;/p&gt;

&lt;p&gt;This makes it easier for someone to debug the system. When they see a value for &lt;code class=&quot;highlighter-rouge&quot;&gt;profile&lt;/code&gt;, it implies something about the &lt;em&gt;history&lt;/em&gt; for that value. If it is &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt;, then it has never been computed in the past, and if it is a &lt;code class=&quot;highlighter-rouge&quot;&gt;Profile&lt;/code&gt;, then it was computed exactly once and updated. There’s no concern that &lt;code class=&quot;highlighter-rouge&quot;&gt;profile&lt;/code&gt; was updated multiple times in the past with a value you can no longer access, or that different callers may have seen different values.&lt;/p&gt;

&lt;h2 id=&quot;state-machines&quot;&gt;State machines&lt;/h2&gt;

&lt;p&gt;A memoized value is a special case of a &lt;a href=&quot;https://en.wikipedia.org/wiki/Finite-state_machine&quot;&gt;state machine&lt;/a&gt;. The value in the previous example transitions from the &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt; state to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Profile&lt;/code&gt; state.&lt;/p&gt;

&lt;p&gt;A &lt;em&gt;monotonic state machine&lt;/em&gt; is a state machine that never revisits a previous state. For example, we may transition a user through multiple states of verification when they sign up for a service:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UNVERIFIED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;VERIFIED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;REVOKED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;


&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;phone_number_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;phone_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNVERIFIED&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cannot set email for a user who already has an email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;verify_email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No current email set&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UNVERIFIED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERIFIED&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Could not validate email&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERIFIED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Email already verified&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;AssertionError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Invalid state&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;revoke_email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactDataState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REVOKED&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Similar for `phone_number`...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This example represents a monotonic state machine, since the only transitions are from &lt;code class=&quot;highlighter-rouge&quot;&gt;NONE&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;UNVERIFIED&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;UNVERIFIED&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;VERIFIED&lt;/code&gt;, or from any state to &lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKED&lt;/code&gt;. No state is ever re-visited. This means that the developer never has to worry about the question “was this email ever valid in the past?”. Instead, an email becomes revoked, which is a different status.&lt;/p&gt;

&lt;p&gt;Of course, if the user wants to set up a new email, this pattern won’t work. Then we can combine it with the “simple value” pattern above and store lists of email-plus-email-state. The current status of the user’s email would be the most recent email-plus-email-state entry.&lt;/p&gt;

&lt;p&gt;In practice, many pieces of data benefit from the monotonic state machine approach, and don’t actually require the ability to return to an initial state. Then the state machine by itself is enough. In my experience, including a separate state denoting the invalidation of data rather than reusing a state becomes a very helpful way of treating data for reasoning about code and for debugging purposes.&lt;/p&gt;

&lt;h2 id=&quot;in-distributed-contexts&quot;&gt;In distributed contexts&lt;/h2&gt;

&lt;p&gt;Monotonic data structures are extremely useful for orchestrating data updates across multiple machines (or across multiple workers on the same machine). This is because of the append-only nature; it’s easier to emit a stream of updates and combine them than it is to emit full data structures and combine them. In a monotonic data structure, the update approach is simply to union together the all the updates.&lt;/p&gt;

&lt;h3 id=&quot;case-study-a-workout-tracking-app&quot;&gt;Case study: a workout tracking app&lt;/h3&gt;

&lt;p&gt;Suppose you have a fitness tracker bracelet and a corresponding companion app. The fitness tracker bracelet automatically detect workouts based on the wearer’s physical activity, and the wearer can manually enter a workout into the app. How do we synchronize the two event streams?&lt;/p&gt;

&lt;p&gt;One option is to queue up workouts on the fitness tracker bracelet for syncing with the app. Its state might look like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WorkoutKind&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkoutDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_workout_to_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_workout_to_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clear_queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The app wants to call &lt;code class=&quot;highlighter-rouge&quot;&gt;get_queued_workouts&lt;/code&gt; to get the queued up workouts, and then &lt;code class=&quot;highlighter-rouge&quot;&gt;clear_queued_workouts&lt;/code&gt; so that they’re not returned and double-counted the next time it asks for them. If the connection between the fitness tracker and the app dies in between &lt;code class=&quot;highlighter-rouge&quot;&gt;get_queued_workouts&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;clear_queued_workouts&lt;/code&gt;, then we may return the workouts again in the next &lt;code class=&quot;highlighter-rouge&quot;&gt;get_queued_workouts&lt;/code&gt; call.&lt;/p&gt;

&lt;p&gt;(There is another approach where &lt;code class=&quot;highlighter-rouge&quot;&gt;get_queued_workouts&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;clear_queued_workouts&lt;/code&gt; are combined into the same call. This also has a flaw: if the app received the workouts and then crashes before it can process them, then the workouts are lost forever.)&lt;/p&gt;

&lt;p&gt;The core problem is that this data structure is not monotonic: data can be lost. A simple fix is to retain all the data and use a monotonically-increasing integer to synchronize the two systems:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WorkoutKind&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkoutDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_workout_to_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;
                  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;
                  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# The caller can use the `next_id` we return for their next call to
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# `get_queued_workouts`. If they crashed and didn't process the
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# previous workouts we sent them, then they can try again with their
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# previous value for the ID.
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The app can essentially filter out workouts it’s already seen. This ensures that the bracelet and the app can always sync and get correct data, even if one party breaks the connection in the middle of the protocol. The technical term for the kind of ID that enables this is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cursor_(databases)&quot;&gt;“cursor”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we really want to delete entries and reclaim space (likely for an embedded system), the monotonic rewriting makes it clearer what changes need to be made to safely delete data:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WorkoutKind&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataclass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WorkoutDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_workout_to_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;
                  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;
                  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# The caller can use the `next_id` we return for their next call to
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# `get_queued_workouts`. If they crashed and didn't process the
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# previous workouts we sent them, then they can try again with their
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# previous value for the ID.
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clear_queued_workouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Delete any workouts that occurred before `since_id`, since they've
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# been acknowledged by the caller.
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;workout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queued_workouts&lt;/span&gt;
                                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;since_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If there are multiple consumers of the workout data from the fitness bracelet, then the safe-to-delete data of the whole system is the intersection of safe-to-delete data for each individual consumer.&lt;/p&gt;

&lt;h2 id=&quot;invalidating-data&quot;&gt;Invalidating data&lt;/h2&gt;

&lt;p&gt;Sometimes, we want to remove a piece of data. Rather than literally deleting it (which may not be audit-log friendly), one can simply commit a new marker piece of data associated with the old piece of data that marks it as deleted.&lt;/p&gt;

&lt;p&gt;If you have a database of records, then you can assign each record an ID, and use that to invalidate the record later. For example:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;entity_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then a record is only valid if there is no deletion record for that same record. (A database engine should be able to configure a schema to query for this quickly.)&lt;/p&gt;

&lt;p&gt;This is the same as transitioning the data to a new state called &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETED&lt;/code&gt;, except that it’s doable in a distributed context. Multiple parties can synchronize data, and the deletion will be properly synchronized between them — without having to modify any data in-place. The technical term for this kind of marker is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Tombstone_(data_store)&quot;&gt;“tombstone”&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;compaction&quot;&gt;Compaction&lt;/h2&gt;

&lt;p&gt;In a monotonic data structure, there may be many updates to the same logical object (including deletions). To speed up queries, it might be prudent to periodically “compact” the state of the monotonic data structure.&lt;/p&gt;

&lt;p&gt;To compact the data structure, one simply iterates over all the update records in the data structure and constructs new aggregate records for each of the entities described therein, with all of the updates/deletions applied. For example, the input of such a procedure might be as follows:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;baz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;set&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;entity_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;entity_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And the output:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qux&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;baz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To carry out this compaction procedure may require an exclusive lock or some other kind of synchronization, but it can reduce the performance overhead of a monotonic approach.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Apr 2020 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/monotonicity/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/monotonicity/</guid>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Login.gov neutered the security of 2FA</title>
        <description>&lt;h3 id=&quot;update&quot;&gt;Update&lt;/h3&gt;

&lt;p&gt;This is fortunately not true, &lt;a href=&quot;https://news.ycombinator.com/item?id=21785524&quot;&gt;as the folks on Hacker News informed me&lt;/a&gt;. I misunderstood what the dialog was
trying to tell me.&lt;/p&gt;

&lt;p&gt;A personal key appears to be used only for &lt;em&gt;recovering a password&lt;/em&gt;, not for
regular 2FA login. The wording is strange because it’s not replacing a 2FA
method with another 2FA method for regular authentication, but instead updating
the method used for recovering a password.&lt;/p&gt;

&lt;p&gt;I almost certainly got the personal key and threw it away, which is what I
normally do.&lt;/p&gt;

&lt;p&gt;From a UI perspective, it would be nice if it mentioned that an authentication
app was already in use. Ironically, having already secured my account caused me
to think that I was making it less secure.&lt;/p&gt;

&lt;h3 id=&quot;original-post&quot;&gt;Original post&lt;/h3&gt;

&lt;p&gt;Today, I was trying to authenticate to a government website via
&lt;a href=&quot;https://login.gov&quot;&gt;login.gov&lt;/a&gt;, which is a centralized service for logging into
US government websites.&lt;/p&gt;

&lt;p&gt;Naturally, logging into government services is a matter of utmost security. As a
result, login.gov features &lt;a href=&quot;https://en.wikipedia.org/wiki/Multi-factor_authentication&quot;&gt;two-factor authentication (2FA)&lt;/a&gt;. This lets you
use a second factor for logins, such as a code-generating device that you have.
I had previously set up a code-generation app on my phone to increase the
security of my account.&lt;/p&gt;

&lt;p&gt;I got this message today indicating that I could no longer use this app:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/login-gov-2fa/login-gov-2fa-new-options.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/login-gov-2fa/login-gov-2fa-new-options.png&quot; alt=&quot;Required upgrade to a new 2FA option. They are: 1) SMS, 2) physical security key, 3) government security key, 4) none of the above and they'll give you 10 codes.&quot; title=&quot;Required upgrade to a new 2FA option. They are: 1) SMS, 2) physical security key, 3) government security key, 4) none of the above and they'll give you 10 codes.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Required upgrade to a new 2FA option.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;What a disappointment! I don’t have a dedicated physical security key or
government security key, and I certainly don’t want to keep track of physical
codes. The only option for me is SMS… which is phone-based, and the very thing
they’re claiming is bad.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pindrop.com/blog/nist-explains-proposed-ban-on-sms-for-2fa/&quot;&gt;SMS has problems&lt;/a&gt; as an authentication factor. The main one is that
many services let you gain access to your account using &lt;em&gt;only&lt;/em&gt; the SMS option,
which means your account really has an extra single-factor authentication method
attached to it, instead of a single dual-factor authentication method.&lt;/p&gt;

&lt;p&gt;But let’s suppose that login.gov isn’t vulnerable to this. &lt;a href=&quot;https://www.jwz.org/blog/2018/07/two-factor-auth-and-sms-hijacking/&quot;&gt;It’s still fairly
easy to hijack SMS messages via social engineering&lt;/a&gt;. Besides that, a
dedicated attacker could also attempt to physically intercept SMS messages with
special hardware.&lt;/p&gt;

&lt;p&gt;My phone was a great authentication mechanism. To access the authentication app,
you have to physically have the phone, then enter my 10-digit phone passcode
(not reused anywhere else) to log in, then scan my fingerprint to access my
authentication app. That’s three factors right there: &lt;a href=&quot;https://blog.gemalto.com/security/2011/09/05/three-factor-authentication-something-you-know-something-you-have-something-you-are/&quot;&gt;something I have,
something I know, and something I am&lt;/a&gt;. Beyond that, you also need to know
my login.gov password (also not reused anywhere else).&lt;/p&gt;

&lt;p&gt;The SMS-based approach is an unfortunate step backwards for security when it’s
most important.&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Dec 2019 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/login-gov-2fa/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/login-gov-2fa/</guid>
        
        <category>security</category>
        
        
      </item>
    
  </channel>
</rss>
