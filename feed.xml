<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steno &amp; PL</title>
    <description>This is a personal blog. Unless otherwise stated, the opinions
expressed here are my own, and not those of my past or present
employers.</description>
    <link>https://blog.waleedkhan.name/</link>
    <atom:link href="https://blog.waleedkhan.name/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 Jan 2023 12:29:50 -0600</pubDate>
    <lastBuildDate>Mon, 02 Jan 2023 12:29:50 -0600</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>On bullet points</title>
        <description>&lt;p&gt;&lt;em&gt;This is a draft article. Your commentary is appreciated, but please don’t disseminate this article widely yet.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In 1972&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, the first “computer” was created. This has made a lot of people very angry and been widely regarded as a bad move.&lt;/p&gt;

&lt;p&gt;One of the original uses for “computers” was to write documents. They promised us a novel way to read and write documents: &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypermedia&quot;&gt;&lt;em&gt;hypermedia&lt;/em&gt;&lt;/a&gt;. A brilliant, “nonlinear” presentation of information. We could write documents more like a &lt;em&gt;conversation&lt;/em&gt;. We could embed references to other media, or take tangents and then return to the main topic, but only if the reader &lt;em&gt;wanted&lt;/em&gt; to.&lt;/p&gt;

&lt;p&gt;And then every article written on the Internet since then has been in a linear, &lt;em&gt;boring&lt;/em&gt; fashion.&lt;/p&gt;

&lt;p&gt;We’ve been had.&lt;/p&gt;

&lt;p&gt;I have several “notes” documents in &lt;a href=&quot;https://docs.google.com&quot;&gt;Google Docs&lt;/a&gt; with ideas for writings that I haven’t fleshed out into proper blog posts. Recently, I took one and
asked &lt;a href=&quot;https://chat.openai.com/&quot;&gt;ChatGPT&lt;/a&gt; to make an article out of it. And it did! It successfully inserted enough transition words into the article to resemble a linear, &lt;em&gt;boring&lt;/em&gt; article.&lt;/p&gt;

&lt;p&gt;Then I realized that the reader then has to ingest all of those useful words and transform them back into bullet points of takeaways in their heads. Hell, maybe you’ll feed &lt;em&gt;this&lt;/em&gt; article into a auto-summarization bot and get a list of succinct bullet points out of it.&lt;/p&gt;

&lt;p&gt;How incredible! With the power of AI, we’ve come full circle: I can write bullet points, a bot can turn it into an article, then another bot can turn them back into bullet points, and you can quickly skim the bullet points. What a time to be alive.&lt;/p&gt;

&lt;p&gt;I’m just going to publish the bullet points directly. And you know what bullet points can do? Represent information &lt;em&gt;succinctly&lt;/em&gt; and &lt;em&gt;non-linearly&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can skip all those transition words.
    &lt;ul&gt;&lt;li&gt;Especially the
    &lt;span style=&quot;display: inline-block; height: 2em&quot;&gt;&lt;u style=&quot;font-family: &apos;Comic Sans MS&apos;, &apos;Comic Sans&apos;, sans-serif;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;fluffy&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/u&gt;&lt;br /&gt;&lt;span aria-label=&quot;&quot; style=&quot;margin-top: -0.5em; margin-left: 0.75em; font-variant: small-caps; font-size: smaller; position: absolute&quot;&gt;adjective&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;display: inline-block; width: auto; height: 2em&quot;&gt;&lt;u style=&quot;font-family: &apos;Comic Sans MS&apos;, &apos;Comic Sans&apos;, sans-serif;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;redundant&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/u&gt;&lt;br /&gt;&lt;span aria-label=&quot;&quot; style=&quot;margin-top: -0.5em; margin-left: 2em; font-variant: small-caps; font-size: smaller; position: absolute&quot;&gt;adjective&lt;/span&gt;&lt;/span&gt;
    ones, which I can delegate to sub-points, if desired.&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can skip over sub-points for topics you don&apos;t care about.
    &lt;ul&gt;&lt;li&gt;Like if I waste your time with this sub-point!&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;You can construct a concept map directly in your head by absorbing the bullet point structure.
    &lt;table style=&quot;margin-top: 1em; text-align: center&quot;&gt;
    &lt;thead&gt;
    &lt;tr&gt;&lt;th&gt;Before&lt;/th&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;After&lt;/th&gt;&lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody style=&quot;padding: 0&quot;&gt;
    &lt;tr&gt;
    &lt;td style=&quot;padding-top: 0&quot;&gt;You&apos;d have to reconstruct it from a block of text.&lt;/td&gt;
    &lt;td style=&quot;padding-top: 0; font-size: 300%; padding-left: 1em; padding-right: 1em&quot;&gt;⇨&lt;/td&gt;
    &lt;td style=&quot;padding-top: 0&quot;&gt;I can guide you along my argumentation using the literal structure of the text on the page.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll reserve long-form, &lt;em&gt;boring&lt;/em&gt; articles for &lt;em&gt;stories&lt;/em&gt; and &lt;em&gt;rants&lt;/em&gt; where I don’t &lt;em&gt;want&lt;/em&gt; you to consume the information efficiently. Where I’ll &lt;a href=&quot;https://tvtropes.org/pmwiki/pmwiki.php/Main/BoldInflation&quot;&gt;insert lots of &lt;em&gt;italics&lt;/em&gt;&lt;/a&gt; so that you have to read it with my tone of &lt;em&gt;cynicism&lt;/em&gt;!&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/on-bullet-points/&quot;;
    this.page.identifier = &quot;on-bullet-points/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;For more information, refer to &lt;a href=&quot;https://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html&quot;&gt;&lt;em&gt;A Brief, Incomplete, and Mostly Wrong History of Programming Languages&lt;/em&gt;&lt;/a&gt; for the history of the C programming language, for which the first computer was originally created, despite its lack of tail call recursion and concurrency support. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 02 Jan 2023 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/on-bullet-points/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/on-bullet-points/</guid>
        
        <category>rant</category>
        
        <category>writing</category>
        
        
      </item>
    
      <item>
        <title>Update #1: Playing Elden Ring in the cloud</title>
        <description>&lt;p&gt;In &lt;a href=&quot;/playing-elden-ring-in-the-cloud/&quot;&gt;&lt;em&gt;Playing Elden Ring in the cloud&lt;/em&gt;&lt;/a&gt;, I went through a lot of trouble setting up a cloud PC gaming server. Since then, I bought a &lt;a href=&quot;https://store.steampowered.com/steamdeck&quot;&gt;Steam Deck&lt;/a&gt;. Overall, I’ve been enjoying this solution a lot more. It works offline (on the plane) and for latency-sensitive games.&lt;/p&gt;

&lt;p&gt;It’s also substantially easier for my wife to pick up and start playing something, compared to launching an entire cloud PC and connecting via Steam Remote Play. And there’s something to be said for playing on the couch next to my loved ones, rather than in our &lt;del&gt;dungeon&lt;/del&gt; home office.&lt;/p&gt;

&lt;p&gt;Additionally, I recently beat the final boss in &lt;a href=&quot;https://enterthegungeon.com/&quot;&gt;&lt;em&gt;Enter the Gungeon&lt;/em&gt;&lt;/a&gt; after much longer than I expected given my general skill level: ~90 (!) hours via cloud PC followed by ~10 hours via Steam Deck. Being a “bullet hell” game, it’s much more latency-sensitive than games in other genres, so I wonder if the additional latency of the cloud PC was hindering my performance. Alternatively, maybe I just got good.&lt;/p&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;30&amp;nbsp;July&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/lan-adapter/&quot;&gt;A LAN adapter isn&apos;t everything&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;August&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/smash-bros-parabola-rule/&quot;&gt;Smash Bros: the parabola rule&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;10&amp;nbsp;March&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/pro-controller-stick-drift/&quot;&gt;On Pro Controller stick drift&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;02&amp;nbsp;April&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/hours-invested-vs-percentile-rank/&quot;&gt;Anecdata: hours invested vs percentile rank&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;08&amp;nbsp;June&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/smash-mistakes/&quot;&gt;My easiest-to-fix Smash mistakes&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/playing-elden-ring-in-the-cloud/&quot;&gt;Playing Elden Ring in the cloud&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;01&amp;nbsp;January&amp;nbsp;2023&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/playing-elden-ring-in-the-cloud-update-1/&quot;&gt;Update #1: Playing Elden Ring in the cloud&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud-update-1/&quot;;
    this.page.identifier = &quot;playing-elden-ring-in-the-cloud-update-1/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Sun, 01 Jan 2023 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud-update-1/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud-update-1/</guid>
        
        <category>gaming</category>
        
        
      </item>
    
      <item>
        <title>Bringing revsets to Git</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.mercurial-scm.org/repo/hg/help/revsets&quot;&gt;Revsets are a declarative language from the Mercurial version control system&lt;/a&gt;. Most commands in Mercurial that accept a commit can instead accept a revset expression to specify one or more commits meeting certain criteria. The &lt;a href=&quot;https://github.com/arxanas/git-branchless&quot;&gt;git-branchless&lt;/a&gt; suite of tools introduces its own revset language which can be used with Git.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Intended audience: intermediate to advanced Git users; developers of version control.&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#try-it-out&quot; id=&quot;markdown-toc-try-it-out&quot;&gt;Try it out&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#existing-git-syntax&quot; id=&quot;markdown-toc-existing-git-syntax&quot;&gt;Existing Git syntax&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#better-scripting&quot; id=&quot;markdown-toc-better-scripting&quot;&gt;Better scripting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#better-graph-view&quot; id=&quot;markdown-toc-better-graph-view&quot;&gt;Better graph view&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#better-rebasing&quot; id=&quot;markdown-toc-better-rebasing&quot;&gt;Better rebasing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#better-testing&quot; id=&quot;markdown-toc-better-testing&quot;&gt;Better testing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prior-work&quot; id=&quot;markdown-toc-prior-work&quot;&gt;Prior work&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-posts&quot; id=&quot;markdown-toc-related-posts&quot;&gt;Related posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;try-it-out&quot;&gt;Try it out&lt;/h2&gt;

&lt;p&gt;To try out revsets, &lt;a href=&quot;https://github.com/arxanas/git-branchless#installation&quot;&gt;install git-branchless&lt;/a&gt;, or see &lt;a href=&quot;#prior-work&quot;&gt;Prior work&lt;/a&gt; for alternatives.&lt;/p&gt;

&lt;aside class=&quot;aside&quot; id=&quot;sapling-scm&quot;&gt;
          &lt;header class=&quot;aside-header&quot;&gt;&lt;a href=&quot;#sapling-scm&quot;&gt;Sapling SCM&lt;/a&gt;&lt;/header&gt;
          &lt;div class=&quot;aside-contents&quot;&gt;&lt;p&gt;While this post was still in draft, &lt;a href=&quot;https://sapling-scm.com/&quot;&gt;Sapling SCM&lt;/a&gt; was announced, which git-branchless is descended from in spirit. It’s discussed in Prior work as well.&lt;/p&gt;
&lt;/div&gt;
        &lt;/aside&gt;

&lt;h2 id=&quot;existing-git-syntax&quot;&gt;Existing Git syntax&lt;/h2&gt;

&lt;p&gt;Git already supports its own revision specification language (see &lt;a href=&quot;https://git-scm.com/docs/gitrevisions&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitrevisions(7)&lt;/code&gt;&lt;/a&gt;). You may have already written e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HEAD~&lt;/code&gt; to mean the immediate parent of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, Git’s revision specification language doesn’t integrate well with the rest of Git. You can write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log foo..bar&lt;/code&gt; to list the commits between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar&lt;/code&gt;, but you can’t write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase foo..bar&lt;/code&gt; to rebase that same range of commits.&lt;/p&gt;

&lt;p&gt;It can also be difficult to express certain sets of commits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can only express contiguous ranges of the commits, not arbitrary sets.&lt;/li&gt;
  &lt;li&gt;You can’t directly query for the children of a given commit.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;git-branchless introduces a revset language which can be used directly via its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git query&lt;/code&gt; or with its other commands, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git smartlog&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The rest of this article shows a few things you can do with revsets. You can also read the &lt;a href=&quot;https://github.com/arxanas/git-branchless/discussions/496&quot;&gt;Revset recipes&lt;/a&gt; thread on the git-branchless discussion board.&lt;/p&gt;

&lt;h2 id=&quot;better-scripting&quot;&gt;Better scripting&lt;/h2&gt;

&lt;p&gt;Revsets can &lt;em&gt;compose&lt;/em&gt; to form complex queries in ways that Git can’t express natively.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt;, you could write this to filter commits by a certain author:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;--author&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Foo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But negating this pattern is quite difficult; see Stack Overflow question &lt;a href=&quot;https://stackoverflow.com/q/6889830/344643&quot;&gt;equivalence of: git log –exclude-author?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With revsets, the same search can be straightforwardly negated with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;not&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git query &lt;span class=&quot;s1&quot;&gt;&apos;not(author.name(Foo))&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s easy to add more filters to refine your query. To additionally limit to files which match a certain pattern and commit messages which contain a certain string, you could write this:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git query &lt;span class=&quot;s1&quot;&gt;&apos;not(author.name(Foo)) &amp;amp; paths.changed(path/to/file) &amp;amp; message(Ticket-123)&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can express complicated ad-hoc queries in this way without having to write a custom script.&lt;/p&gt;

&lt;h2 id=&quot;better-graph-view&quot;&gt;Better graph view&lt;/h2&gt;

&lt;p&gt;Git has a graph view available with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --graph&lt;/code&gt;, which is a useful way to orient yourself in the commit graph. However, it’s somewhat limited in what it can render. There’s no way to filter commits to only those matching a certain condition.&lt;/p&gt;

&lt;p&gt;git-branchless offers a “smartlog” command which attempts to show you only relevant commits. By default, it includes all of your local work up until the main branch, but not other people’s commits. Mine looks like this right now:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/smartlog-default.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/smartlog-default.png&quot; alt=&quot;Image of the smartlog view with a few draft commits and branches.&quot; title=&quot;Image of the smartlog view with a few draft commits and branches.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of the smartlog view with a few draft commits and branches.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;But you can also filter commits using revsets. To show only my draft work which touches the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git-branchless-lib/src/git&lt;/code&gt; directory, I can issue this command:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/smartlog-with-omitted-commits.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/smartlog-with-omitted-commits.png&quot; alt=&quot;Image of the smartlog view as before, but with only two draft commits visible (excluding those on the main branch).&quot; title=&quot;Image of the smartlog view as before, but with only two draft commits visible (excluding those on the main branch).&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of the smartlog view as before, but with only two draft commits visible (excluding those on the main branch).&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;Another common use-case might be to render the relative topology of branches in just this stack:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/smartlog-branch-topology.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/smartlog-branch-topology.png&quot; alt=&quot;Image of a different smartlog view as before, showing branch-1 and branch-3 with an omitted commit between them.&quot; title=&quot;Image of a different smartlog view as before, showing branch-1 and branch-3 with an omitted commit between them.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of a different smartlog view as before, showing branch-1 and branch-3 with an omitted commit between them.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;You can also render commits which have already been checked into the main branch, if so desired.&lt;/p&gt;

&lt;h2 id=&quot;better-rebasing&quot;&gt;Better rebasing&lt;/h2&gt;

&lt;p&gt;Not only can you render the commit graph with revsets, but you can also modify it. Revsets are quite useful when used with “patch-stack” workflows, such as those used for the Git and Linux projects, or at certain tech companies practicing &lt;a href=&quot;https://trunkbaseddevelopment.com/&quot;&gt;trunk-based development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example, suppose you have some refactoring changes to the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt; on your current branch, and you want to separate them into a new branch for review:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog.png&quot; alt=&quot;Image of a feature branch with four commits. Each commit shows two touched files underneath it.&quot; title=&quot;Image of a feature branch with four commits. Each commit shows two touched files underneath it.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of a feature branch with four commits. Each commit shows two touched files underneath it.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;You can use revsets to select just the commits touching &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt; in the current branch:&lt;/p&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-filtered-commits.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-filtered-commits.png&quot; alt=&quot;Image of the same feature branch as before, but with the first and third commits outlined in red and the touched file &amp;apos;foo&amp;apos; in red.&quot; title=&quot;Image of the same feature branch as before, but with the first and third commits outlined in red and the touched file &amp;apos;foo&amp;apos; in red.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of the same feature branch as before, but with the first and third commits outlined in red and the touched file &amp;#8216;foo&amp;#8217; in red.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;Then use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; to pull them out:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git move &lt;span class=&quot;nt&quot;&gt;--exact&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;stack() &amp;amp; paths.changed(foo)&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--dest&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;main&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-extract-commits.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-extract-commits.png&quot; alt=&quot;Image of the same feature branch as before, but the first and third commits are shown to be missing from the original feature branch, with dotted outlines indicating their former positions. They have been moved to a new feature branch, still preserving their relative order.&quot; title=&quot;Image of the same feature branch as before, but the first and third commits are shown to be missing from the original feature branch, with dotted outlines indicating their former positions. They have been moved to a new feature branch, still preserving their relative order.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of the same feature branch as before, but the first and third commits are shown to be missing from the original feature branch, with dotted outlines indicating their former positions. They have been moved to a new feature branch, still preserving their relative order.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;If you want to reorder the commits so that they’re at the base of the current branch, you can just add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--insert&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git move &lt;span class=&quot;nt&quot;&gt;--exact&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;stack() &amp;amp; paths.changed(foo)&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--dest&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;main&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--insert&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;figure&quot;&gt;
        &lt;a href=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-reordered-commits.png&quot;&gt;&lt;img class=&quot;center-image&quot; src=&quot;/assets/posts/bringing-revsets-to-git/drawn-smartlog-reordered-commits.png&quot; alt=&quot;Image of the same feature branch as before, but the first and third commits are shown to be missing from their original positions in the feature branch, with dotted outlines indicating their former positions. They have been moved to the beginning of that same feature branch, still preserving their relative order, now before the second and fourth commits, also preserving their relative order.&quot; title=&quot;Image of the same feature branch as before, but the first and third commits are shown to be missing from their original positions in the feature branch, with dotted outlines indicating their former positions. They have been moved to the beginning of that same feature branch, still preserving their relative order, now before the second and fourth commits, also preserving their relative order.&quot; /&gt;&lt;/a&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;&lt;p&gt;Image of the same feature branch as before, but the first and third commits are shown to be missing from their original positions in the feature branch, with dotted outlines indicating their former positions. They have been moved to the beginning of that same feature branch, still preserving their relative order, now before the second and fourth commits, also preserving their relative order.&lt;/p&gt;
&lt;/figcaption&gt;
      &lt;/figure&gt;

&lt;p&gt;Of course, you can use a number of different predicates to specify the commits to move. See the full &lt;a href=&quot;https://github.com/arxanas/git-branchless/wiki/Reference:-Revsets&quot;&gt;revset reference&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;better-testing&quot;&gt;Better testing&lt;/h2&gt;

&lt;p&gt;You can use revsets with git-branchless’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt; command to help you run (or re-run) tests on various commits. For example, to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pytest&lt;/code&gt; on all of your branches in parallel and cache the results, you can run:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;run &lt;span class=&quot;nt&quot;&gt;--exec&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;pytest&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--jobs&lt;/span&gt; 4 &lt;span class=&quot;s1&quot;&gt;&apos;branches()&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also use revsets to aid the investigation of a bug with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt;. If you know that a bug was introduced between commits A and B, and has to be in a commit touching file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt;, then you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt; like this to find the first commit which introduced the bug:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;run &lt;span class=&quot;nt&quot;&gt;--exec&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cargo test&apos;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;A:B &amp;amp; paths.changed(foo)&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This can be an easy way to skip commits which you know aren’t relevant to the change.&lt;/p&gt;

&lt;aside class=&quot;aside&quot; id=&quot;versus-git-bisect&quot;&gt;
          &lt;header class=&quot;aside-header&quot;&gt;&lt;a href=&quot;#versus-git-bisect&quot;&gt;Versus git bisect&lt;/a&gt;&lt;/header&gt;
          &lt;div class=&quot;aside-contents&quot;&gt;&lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bisect&lt;/code&gt; and filter by paths, of course, but it may be more tedious. Note that, unlike &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bisect&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt; currently conducts a linear search, so it’s not the best choice for all cases. This will hopefully change in the future.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt; has several features which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bisect&lt;/code&gt; doesn’t offer, such as parallel testing, out-of-tree testing, and caching of test results.&lt;/p&gt;
&lt;/div&gt;
        &lt;/aside&gt;

&lt;aside class=&quot;aside&quot; id=&quot;caching-test-results&quot;&gt;
          &lt;header class=&quot;aside-header&quot;&gt;&lt;a href=&quot;#caching-test-results&quot;&gt;Caching test results&lt;/a&gt;&lt;/header&gt;
          &lt;div class=&quot;aside-contents&quot;&gt;&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git test&lt;/code&gt; will cache the results of the test command, so if you decide to expand the search set later, you don’t have to re-run the test command on commits you’ve already tested.&lt;/p&gt;
&lt;/div&gt;
        &lt;/aside&gt;
&lt;h2 id=&quot;prior-work&quot;&gt;Prior work&lt;/h2&gt;

&lt;p&gt;This isn’t the first introduction of revsets to version control. Prior work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Of course, Mercurial itself introduced revsets. See the documentation here: &lt;a href=&quot;https://www.mercurial-scm.org/repo/hg/help/revsets&quot;&gt;https://www.mercurial-scm.org/repo/hg/help/revsets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/quark-zju/gitrevset&quot;&gt;https://github.com/quark-zju/gitrevset&lt;/a&gt;: the immediate predecessor of this work. git-branchless uses the same back-end “segmented changelog” library (from &lt;a href=&quot;https://github.com/facebookexperimental/eden&quot;&gt;Sapling SCM&lt;/a&gt;, then called Eden SCM) to manage the commit graph. The advantage of using revsets with git-branchless is that it integrates with several other commands in the git-branchless suite of tools.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sapling-scm.com/&quot;&gt;https://sapling-scm.com/&lt;/a&gt;: also an immediate predecessor of this work, as it originally published the segmented changelog library which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitrevset&lt;/code&gt; and git-branchless use. git-branchless was inspired by Sapling’s design, and has similar but non-overlapping functionality. See &lt;a href=&quot;https://github.com/arxanas/git-branchless/discussions/654&quot;&gt;https://github.com/arxanas/git-branchless/discussions/654&lt;/a&gt; for more details.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/martinvonz/jj&quot;&gt;https://github.com/martinvonz/jj&lt;/a&gt;: Jujutsu is a Git-compatible VCS which also offers revsets. git-branchless and jj have similar but non-overlapping functionality. It’s worth checking out if you want to use a more principled version control system but still seamlessly interoperate with Git repositories. I expect git-branchless’s unique features to make their way into Jujutsu over time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;June&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/git-undo/&quot;&gt;git undo: We can do better&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;12&amp;nbsp;October&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/in-memory-rebases/&quot;&gt;Lightning-fast rebases with git-move&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;October&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/build-aware-sparse-checkouts/&quot;&gt;Build-aware sparse checkouts&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;16&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/bringing-revsets-to-git/&quot;&gt;Bringing revsets to Git&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;a class=&quot;icon-hacker-news&quot; href=&quot;https://news.ycombinator.com/item?id=33641952 &quot;&gt;Discussion on Hacker News&lt;/a&gt;&lt;/li&gt;


&lt;li&gt;&lt;a class=&quot;icon-lobsters&quot; href=&quot;https://lobste.rs/s/4lp2pz/bringing_revsets_git &quot;&gt;Discussion on Lobsters&lt;/a&gt;&lt;/li&gt;


&lt;li&gt;&lt;a class=&quot;icon-reddit&quot; href=&quot;https://www.reddit.com/r/programming/comments/yxvoy1/bringing_revsets_to_git/ &quot;&gt;Discussion on Reddit&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/bringing-revsets-to-git/&quot;;
    this.page.identifier = &quot;bringing-revsets-to-git/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Wed, 16 Nov 2022 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/bringing-revsets-to-git/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/bringing-revsets-to-git/</guid>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>Update #1: Automatically detecting and replying to recruiter spam</title>
        <description>&lt;p&gt;In &lt;a href=&quot;/detect-recruiter-spam/&quot;&gt;&lt;em&gt;Automatically detecting and replying to recruiter spam&lt;/em&gt;&lt;/a&gt;, I discussed an approach to automatically classifying and detecting unsolicited recruiter messages. Since then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I received a message from a recruiter, which was automatically replied to by my recruiter bot. This led me to leave my old job and accept a new offer at around twice the total compensation.&lt;/li&gt;
  &lt;li&gt;In &lt;a href=&quot;https://github.com/arxanas/detect-recruiter-spam/commit/47f4106cac9067958c3e2679c486a052f9794f25&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support responding via Gmail&lt;/code&gt;&lt;/a&gt;, I got the bot to successfully reply to LinkedIn emails, and therefore send replies on my behalf on LinkedIn.
    &lt;ul&gt;
      &lt;li&gt;However, I believe this to be counterproductive. In my understanding, LinkedIn keeps an activity/response timeliness score for users to determine if a given user is likely to be open to new opportunities on LinkedIn. Automatically responding to LinkedIn messages would raise this score. As a consequence, this positive feedback loop has caused me to receive &lt;em&gt;more&lt;/em&gt; LinkedIn messages than ever before! So I disabled auto-replies to LinkedIn emails.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;September&amp;nbsp;2016&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/dot-name-email-address/&quot;&gt;Is having a &apos;.name&apos; email address a good idea?&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;13&amp;nbsp;October&amp;nbsp;2016&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/messenger-conversation-macros/&quot;&gt;Analyzing all of my Messenger conversations to create conversational macros&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;29&amp;nbsp;April&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/mail-server/&quot;&gt;I used to run my own mail server&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;October&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/detect-recruiter-spam/&quot;&gt;Automatically detecting and replying to recruiter spam&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;09&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/detect-recruiter-spam-update-1/&quot;&gt;Update #1: Automatically detecting and replying to recruiter spam&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/detect-recruiter-spam-update-1/&quot;;
    this.page.identifier = &quot;detect-recruiter-spam-update-1/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Wed, 09 Nov 2022 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/detect-recruiter-spam-update-1/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/detect-recruiter-spam-update-1/</guid>
        
        <category>career</category>
        
        <category>machine-learning</category>
        
        <category>python</category>
        
        
      </item>
    
      <item>
        <title>Playing Elden Ring in the cloud</title>
        <description>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Elden_Ring&quot;&gt;Elden Ring&lt;/a&gt;&lt;/em&gt; was recently released for Windows, Playstation, and Xbox. I don’t own any of those platforms (and don’t want to buy one), but I still wanted to play, so I decided to run the game remotely and stream it to my household.&lt;/p&gt;

&lt;aside class=&quot;aside&quot; id=&quot;what-about-the-latency&quot;&gt;
          &lt;header class=&quot;aside-header&quot;&gt;&lt;a href=&quot;#what-about-the-latency&quot;&gt;What about the latency?&lt;/a&gt;&lt;/header&gt;
          &lt;div class=&quot;aside-contents&quot;&gt;&lt;p&gt;There’s necessarily more latency when streaming games than when playing locally. I can expect an additional ~50ms round-trip to my nearest AWS datacenter (us-west-2). Elden Ring doesn’t require much in terms of low latency: during combat, most attacks have long startup animations during which you can react, for which 50ms is not noticeable. But various other real-time games are sensitive to that amount of latency to the point where it would not be reasonable to play competitively via stream.&lt;/p&gt;
&lt;/div&gt;
        &lt;/aside&gt;

&lt;hr /&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#managed-gaming-services&quot; id=&quot;markdown-toc-managed-gaming-services&quot;&gt;Managed gaming services&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#renting-directly-from-cloud-providers&quot; id=&quot;markdown-toc-renting-directly-from-cloud-providers&quot;&gt;Renting directly from cloud providers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#managed-cloud-pc-services&quot; id=&quot;markdown-toc-managed-cloud-pc-services&quot;&gt;Managed cloud PC services&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#playing-in-the-living-room&quot; id=&quot;markdown-toc-playing-in-the-living-room&quot;&gt;Playing in the living room&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-posts&quot; id=&quot;markdown-toc-related-posts&quot;&gt;Related posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;managed-gaming-services&quot;&gt;Managed gaming services&lt;/h3&gt;

&lt;p&gt;I evaluated a number of managed services for on-demand gaming. I would prefer to buy Elden Ring for PC since that’s most likely to let me retain ownership even across devices or platforms, but I would play on a console or rent the game if the experience was good.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.xbox.com/en-US/xbox-game-pass&quot;&gt;Xbox Game Pass&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;The game selection is limited, and it doesn’t support Elden Ring.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.playstation.com/en-us/ps-now/&quot;&gt;Playstation Now&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;The game selection is limited, and it doesn’t support Elden Ring.&lt;/li&gt;
      &lt;li&gt;I had also previously tried it for a PS2 game and the experience was laggy and buggy.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/luna/landing-page&quot;&gt;Amazon Luna&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;The game selection is limited, and it doesn’t support Elden Ring.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stadia.google.com/&quot;&gt;Google Stadia&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;The game selection is limited, and it doesn’t support Elden Ring.&lt;/li&gt;
      &lt;li&gt;Google has since announced that Stadia is shutting down.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nvidia.com/en-us/geforce-now/&quot;&gt;Nvidia GeForce Now&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;The game selection is limited. Despite supporting many PC games, it doesn’t support Elden Ring.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So none of these options were suitable, which was disappointing. The latest summary of cloud availability can be found at &lt;a href=&quot;https://cloudbase.gg/g/elden-ring/&quot;&gt;https://cloudbase.gg/g/elden-ring/&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;renting-directly-from-cloud-providers&quot;&gt;Renting directly from cloud providers&lt;/h3&gt;

&lt;p&gt;I’d probably have to use general-purpose computing to play specific PC games I owned. You can rent GPUs and Windows machines on-demand, so surely you can use them to play video games, too?&lt;/p&gt;

&lt;p&gt;I found the &lt;a href=&quot;https://www.reddit.com/r/cloudygamer/&quot;&gt;CloudyGamer&lt;/a&gt; community focused on tackling the same problem. One solution was &lt;a href=&quot;https://cloudygamer.com/&quot;&gt;cloudygamer.com&lt;/a&gt;: a self-service app to start and stop a gaming &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_machine&quot;&gt;virtual machine&lt;/a&gt; on &lt;a href=&quot;https://en.wikipedia.org/wiki/Amazon_Web_Services&quot;&gt;AWS&lt;/a&gt;. This looked promising, and I spent a considerable amount of time trying to provision a virtual machine using it. But in the end, I wasn’t able to provision a suitable VM even directly from the AWS web interface — I have no idea why. I wrote up details at &lt;a href=&quot;https://github.com/lg/cloudy-gamer/issues/35&quot;&gt;https://github.com/lg/cloudy-gamer/issues/35&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;managed-cloud-pc-services&quot;&gt;Managed cloud PC services&lt;/h3&gt;

&lt;p&gt;Instead, I ended up trying several cloud PC services:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shadow.tech/&quot;&gt;Shadow&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Pricing: $30/month for unlimited usage.&lt;/li&gt;
      &lt;li&gt;However, your connection times out after 30 minutes of inactivity, as measured by the custom streaming client. Thus, using an alternate client such as Steam Remote Play will cause you to get disconnected unless you periodically perform manual inputs at your computer.&lt;/li&gt;
      &lt;li&gt;Most recently, forwarding my &lt;a href=&quot;https://www.nintendo.com/store/products/pro-controller/&quot;&gt;Nintendo Switch Pro Controller&lt;/a&gt; over USB via the streaming client doesn’t work; however, I can use Steam Remote Play to successfully forward the controller inputs. That means that I have two concurrent streams to my computer while playing.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shrine.app/&quot;&gt;Shrine&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Usage pricing: Between $0.65/hour and $1.90/hour (depending on machine specs). Storage pricing: $0.01/100 GB/hour (~$7.30/100 GB/month).&lt;/li&gt;
      &lt;li&gt;The pricing and usage model has changed several times since I started using it.&lt;/li&gt;
      &lt;li&gt;Most recently, it had somewhat poor latency from US-West Las Vegas (to Seattle).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://airgpu.com/&quot;&gt;Airgpu&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Usage pricing: Between $0.65/hour and $1.15/hour (depending on machine specs). Storage pricing: $3.50/50 GB/month ($7.00/100 GB/month).&lt;/li&gt;
      &lt;li&gt;Most recently, audio doesn’t work when used with Steam Remote Play.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these services have been problematic in one way or another. Software solutions that used to work tend to later break. Shadow has been the most reliable overall, but it’s also the most limited since you have to use their streaming client.&lt;/p&gt;

&lt;h3 id=&quot;playing-in-the-living-room&quot;&gt;Playing in the living room&lt;/h3&gt;

&lt;p&gt;Next, I wanted to stream to my living room TV. I had a &lt;a href=&quot;https://en.wikipedia.org/wiki/Steam_Link&quot;&gt;Steam Link&lt;/a&gt; device which I purchased a long time ago, which I connected to my Steam account. I paired my Pro Controller and used Steam Remote Play to connect to the remote machine, which worked reasonably well.&lt;/p&gt;

&lt;p&gt;Overall, it takes 1-2 minutes to boot the cloud PC, and perhaps a minute more to launch Steam Remote Play. This is longer than with a dedicated console or PC, but overall acceptable given that typical gaming session time would be 1-2 hours.&lt;/p&gt;

&lt;p&gt;Cloud gaming has a long way to go before it’s convenient!&lt;/p&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;30&amp;nbsp;July&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/lan-adapter/&quot;&gt;A LAN adapter isn&apos;t everything&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;August&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/smash-bros-parabola-rule/&quot;&gt;Smash Bros: the parabola rule&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;10&amp;nbsp;March&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/pro-controller-stick-drift/&quot;&gt;On Pro Controller stick drift&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;02&amp;nbsp;April&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/hours-invested-vs-percentile-rank/&quot;&gt;Anecdata: hours invested vs percentile rank&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;08&amp;nbsp;June&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/smash-mistakes/&quot;&gt;My easiest-to-fix Smash mistakes&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/playing-elden-ring-in-the-cloud/&quot;&gt;Playing Elden Ring in the cloud&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;01&amp;nbsp;January&amp;nbsp;2023&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/playing-elden-ring-in-the-cloud-update-1/&quot;&gt;Update #1: Playing Elden Ring in the cloud&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud/&quot;;
    this.page.identifier = &quot;playing-elden-ring-in-the-cloud/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Fri, 04 Nov 2022 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/playing-elden-ring-in-the-cloud/</guid>
        
        <category>gaming</category>
        
        
      </item>
    
      <item>
        <title>Build-aware sparse checkouts</title>
        <description>&lt;p&gt;My team and I recently gave a talk at &lt;a href=&quot;https://github.blog/2022-06-15-git-merge-2022/&quot;&gt;Git Merge 2022&lt;/a&gt; on our tool &lt;a href=&quot;https://github.com/twitter/focus&quot;&gt;Focus&lt;/a&gt;, which integrates Git sparse checkouts with the Bazel build system.&lt;/p&gt;

&lt;p&gt;Talk recording (~15 minutes):&lt;/p&gt;

&lt;div class=&quot;iframe-container&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube-nocookie.com/embed/OsIJ99lkSdM&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;And here are some slides I published internally. These go into the technical details of content-hashing, and also have doodles:&lt;/p&gt;

&lt;div class=&quot;iframe-container&quot;&gt;
&lt;iframe src=&quot;https://docs.google.com/presentation/d/e/2PACX-1vTdh_U9FagMX_9rdto9qewcczWwrMnvTzuVkqqQEp0C2U5jG5dqFi6rMoQJlpno0Q/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;June&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/git-undo/&quot;&gt;git undo: We can do better&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;12&amp;nbsp;October&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/in-memory-rebases/&quot;&gt;Lightning-fast rebases with git-move&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;October&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/build-aware-sparse-checkouts/&quot;&gt;Build-aware sparse checkouts&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;16&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/bringing-revsets-to-git/&quot;&gt;Bringing revsets to Git&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/build-aware-sparse-checkouts/&quot;;
    this.page.identifier = &quot;build-aware-sparse-checkouts/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Wed, 19 Oct 2022 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/build-aware-sparse-checkouts/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/build-aware-sparse-checkouts/</guid>
        
        <category>bazel</category>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>Functions are constants too</title>
        <description>&lt;p&gt;Once in a while, I get feedback on a code review remarking that I ought to extract a certain string literal into a constant. For example, that this:&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FOO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Should become this:&lt;/p&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FOO_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FOO&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FOO_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This &lt;em&gt;increases&lt;/em&gt; the scope of the relevant constant. Now you have to check to see if that constant is used anywhere else, without improving legibility otherwise. So I’m oftentimes opposed to this kind of change.&lt;/p&gt;

&lt;p&gt;(That being said, I’m not opposed to writing a helpful constant name which is still restricted in scope to the function body.)&lt;/p&gt;

&lt;p&gt;Functions are constant values too! It’s perfectly acceptable to leave implementation details, &lt;em&gt;including magic values&lt;/em&gt;, inside a function definition (assuming that they’re not used anywhere else).&lt;/p&gt;

&lt;p&gt;Or alternatively — constants are essentially zero-ary functions. This is more obvious in e.g. an ML-style language where function and constant bindings follow the same syntactic pattern:&lt;/p&gt;

&lt;div class=&quot;language-ocaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;(* constant binding *)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;(* function which takes one argument *)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/functions-are-constants/&quot;;
    this.page.identifier = &quot;functions-are-constants/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Tue, 14 Jun 2022 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/functions-are-constants/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/functions-are-constants/</guid>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Fixing my numb arms</title>
        <description>&lt;p&gt;&lt;em&gt;(I am not a medical professional, and you should consult a doctor for your medical advice.)&lt;/em&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#symptoms&quot; id=&quot;markdown-toc-symptoms&quot;&gt;Symptoms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#treatment&quot; id=&quot;markdown-toc-treatment&quot;&gt;Treatment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a while, I suffered from reduced sensation along the outside of my forearm, extending to the fourth and fifth fingers. These regions are serviced by the &lt;a href=&quot;https://en.wikipedia.org/wiki/Ulnar_nerve&quot;&gt;&lt;em&gt;ulnar nerve&lt;/em&gt;&lt;/a&gt;; this condition is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Ulnar_nerve_entrapment&quot;&gt;&lt;em&gt;ulnar nerve entrapment&lt;/em&gt;&lt;/a&gt;. These symptoms can be straightforwardly resolved by building muscle to cushion the ulnar nerve.&lt;/p&gt;

&lt;h2 id=&quot;symptoms&quot;&gt;Symptoms&lt;/h2&gt;

&lt;p&gt;The ulnar nerve is same as the “funny bone” nerve on the elbow, which can be struck directly to induce an uncomfortable tingling sensation.&lt;/p&gt;

&lt;p&gt;Ulnar nerve entrapment happens because the ulnar nerve is compressed as it travels past the elbow. If you think of your nerve as a string running along the outside of your arm, it’s clear to see that bending your elbow would cause it to become taut, and therefore experience more pressure at the joint. Therefore, you could expect that keeping your elbow bent for long periods of time would make you more susceptible to ulnar nerve entrapment.&lt;/p&gt;

&lt;p&gt;At night, I would often develop a pins-and-needles sensation of numbness along the same region on my arm. Eventually, it got severe enough that it started waking me up regularly. I purchased elbow pads (such as &lt;a href=&quot;https://www.amazon.com/Heelbo-Heel-Elbow-Protector-BLUE/dp/B01AE5MVB6&quot;&gt;these&lt;/a&gt;) to wear at night, which helped, but didn’t address the root cause.&lt;/p&gt;

&lt;h2 id=&quot;treatment&quot;&gt;Treatment&lt;/h2&gt;

&lt;p&gt;I solved this issue more permanently by building the appropriate arm muscle, which somehow cushioned the region. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Triceps&quot;&gt;&lt;em&gt;triceps&lt;/em&gt; muscle&lt;/a&gt; is a set of three muscles on the back side of the arm. In particular, the &lt;em&gt;medial head&lt;/em&gt; of the triceps is located just above the elbow. By strengthening this muscle, my problems went away — and when failing to maintain this muscle, they come back.&lt;/p&gt;

&lt;p&gt;Since I am very weak, I found success with &lt;a href=&quot;https://en.wikipedia.org/wiki/Lying_triceps_extensions&quot;&gt;&lt;em&gt;lying triceps extensions&lt;/em&gt;&lt;/a&gt; using 10- or 15-pound dumbbells. After a few days of regularly exercising my triceps, I stopped being woken up at night due to tingling in my arms.&lt;/p&gt;

&lt;p&gt;An alternative is &lt;a href=&quot;https://en.wikipedia.org/wiki/Lying_triceps_extensions#Triceps_extension_push-ups&quot;&gt;&lt;em&gt;triceps push-ups&lt;/em&gt;&lt;/a&gt;, which can be done without equipment. However, it can be to execute these with good form as a beginner.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/numb-arms/&quot;;
    this.page.identifier = &quot;numb-arms/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Sun, 21 Nov 2021 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/numb-arms/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/numb-arms/</guid>
        
        <category>health</category>
        
        
      </item>
    
      <item>
        <title>Lightning-fast rebases with git-move</title>
        <description>&lt;p&gt;You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; as a drop-in 10x faster replacement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt; (see &lt;a href=&quot;#timing&quot;&gt;the demo&lt;/a&gt;). The basic syntax is&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git move -b &amp;lt;branch&amp;gt; -d &amp;lt;dest&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;How do I install it?&lt;/strong&gt; The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; command is part of the &lt;a href=&quot;https://github.com/arxanas/git-branchless&quot;&gt;git-branchless&lt;/a&gt; suite of tools. See the &lt;a href=&quot;https://github.com/arxanas/git-branchless/wiki/Installation&quot;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What does “rebase” mean?&lt;/strong&gt; In Git, to “rebase” a commit means to apply a commit’s diff against its parent commit as a patch to another target commit. Essentially, it “moves” the commit from one place to another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How much faster is it?&lt;/strong&gt; See &lt;a href=&quot;#timing&quot;&gt;Timing&lt;/a&gt;. If the branch is currently checked out, then 10x is a reasonable estimate. If the branch is not checked out, then it’s even faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is performance the only added feature?&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; also offers several other quality-of-life improvements over &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt;. For example, it can move entire subtrees, not just branches. See &lt;a href=&quot;https://github.com/arxanas/git-branchless/wiki/Command:-git-move&quot;&gt;the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; documentation&lt;/a&gt; for more information.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#timing&quot; id=&quot;markdown-toc-timing&quot;&gt;Timing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-is-it-faster&quot; id=&quot;markdown-toc-why-is-it-faster&quot;&gt;Why is it faster?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-about-merge-conflicts&quot; id=&quot;markdown-toc-what-about-merge-conflicts&quot;&gt;What about merge conflicts?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-work&quot; id=&quot;markdown-toc-related-work&quot;&gt;Related work&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#interactive-rebase&quot; id=&quot;markdown-toc-interactive-rebase&quot;&gt;Interactive rebase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-posts&quot; id=&quot;markdown-toc-related-posts&quot;&gt;Related posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;timing&quot;&gt;Timing&lt;/h2&gt;

&lt;p&gt;I tested on the Git mirror of Mozilla’s &lt;a href=&quot;https://github.com/mozilla/gecko-dev&quot;&gt;gecko-dev&lt;/a&gt; repository. This is a large repository with ~750k commits and ~250k working copy files, so it’s good for stress tests.&lt;/p&gt;

&lt;p&gt;It takes about 10 seconds to rebase 20 commits with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt;:&lt;/p&gt;

&lt;script id=&quot;asciicast-437913&quot; src=&quot;https://asciinema.org/a/437913.js&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;noscript&gt;&lt;a href=&quot;https://asciinema.org/a/437913&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://asciinema.org/a/437913.svg&quot; /&gt;&lt;/a&gt;&lt;/noscript&gt;

&lt;p&gt;Versus about 1 second with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt;:&lt;/p&gt;

&lt;script id=&quot;asciicast-437914&quot; src=&quot;https://asciinema.org/a/437914.js&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;noscript&gt;&lt;a href=&quot;https://asciinema.org/a/437914&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://asciinema.org/a/437914.svg&quot; /&gt;&lt;/a&gt;&lt;/noscript&gt;

&lt;p&gt;These timings are not scientific, and there are optimizations that can be applied to both, but the order of magnitude is roughly correct in my experience.&lt;/p&gt;

&lt;p&gt;Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; can operate entirely in-memory, it can also rebase branches which aren’t checked out. This is much faster than using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt;, because it doesn’t have to touch the working copy at all.&lt;/p&gt;

&lt;h2 id=&quot;why-is-it-faster&quot;&gt;Why is it faster?&lt;/h2&gt;

&lt;p&gt;There are two main problems with the Git rebase process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It touches disk.&lt;/li&gt;
  &lt;li&gt;It uses the index data structure to create tree objects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a stock Git rebase, you have to check out to the target commit, and then apply each of the commits’ contents individually to disk. After each commit’s application to disk, Git will implicitly check the status of files on disk again. This isn’t strictly necessary for many rebases, and can be quite slow on sizable repos.&lt;/p&gt;

&lt;p&gt;When Git is ready to apply one of the commits, it first populates the “index” data structure, which is essentially a sorted list of all of the files in the working copy. It can be expensive for Git to convert the index into a “tree” object, which is used to store commits internally, as it has to insert or re-insert many already-existing entries into the object database. (There are some optimizations that can improve this, such as the &lt;a href=&quot;https://git-scm.com/docs/index-format#_cache_tree&quot;&gt;cache tree extension&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Work is already well underway on upstream Git to support the features which would make in-memory rebases feasible, so hopefully we’ll see mainstream Git enjoy similar performance gains in the future.&lt;/p&gt;

&lt;h2 id=&quot;what-about-merge-conflicts&quot;&gt;What about merge conflicts?&lt;/h2&gt;

&lt;p&gt;If an in-memory rebase produces a merge conflict, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; will cancel it and restart it as an on-disk rebase, so that the user can resolve merge conflicts. Since in-memory rebases are typically very fast, this doesn’t usually impede the developer experience.&lt;/p&gt;

&lt;p&gt;Of course, it’s possible in principle to resolve merge conflicts in-memory as well.&lt;/p&gt;

&lt;h2 id=&quot;related-work&quot;&gt;Related work&lt;/h2&gt;

&lt;p&gt;In-memory rebases are not a new idea:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/git-up/GitUp&quot;&gt;GitUp&lt;/a&gt; (2015), a GUI client for Git with a focus on manipulating the commit graph.
    &lt;ul&gt;
      &lt;li&gt;Unfortunately, in my experience, it doesn’t perform too well on large repositories.&lt;/li&gt;
      &lt;li&gt;To my knowledge, no other Git GUI client offers in-memory rebases. Please let me know of others, so that I can update this comment.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mystor/git-revise&quot;&gt;git-revise&lt;/a&gt; (2019), a command-line utility which allows various in-memory edits to commits.
    &lt;ul&gt;
      &lt;li&gt;git-revise is a replacement for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt;, not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase&lt;/code&gt;. It can reorder commits, but it isn’t intended to move commits from one base to another. See &lt;a href=&quot;#interactive-rebase&quot;&gt;Interactive rebase&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Other source control systems have in-memory rebases, such as &lt;a href=&quot;https://www.mercurial-scm.org/&quot;&gt;Mercurial&lt;/a&gt; and &lt;a href=&quot;https://github.com/martinvonz/jj&quot;&gt;Jujutsu&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The goal of the &lt;a href=&quot;https://github.com/arxanas/git-branchless&quot;&gt;git-branchless&lt;/a&gt; project is to improve developer velocity with various features that can be incrementally adopted by users, such as in-memory rebases. Performance is an explicit feature: it’s designed to work with monorepo-scale codebases.&lt;/p&gt;

&lt;h2 id=&quot;interactive-rebase&quot;&gt;Interactive rebase&lt;/h2&gt;

&lt;p&gt;Interactive rebase (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt;) is a feature which can be used to modify, reorder, combine, etc. several commits in sequence. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git move&lt;/code&gt; does not do this at present, but this functionality is planned for a future git-branchless release. Watch &lt;a href=&quot;https://github.com/arxanas/git-branchless&quot;&gt;the Github repository&lt;/a&gt; to be notified of new releases.&lt;/p&gt;

&lt;p&gt;In the meantime, you can use &lt;a href=&quot;https://github.com/mystor/git-revise&quot;&gt;git-revise&lt;/a&gt;. Unfortunately, git-branchless and git-revise do not interoperate well due to git-revise’s lack of support for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post-rewrite&lt;/code&gt; hook (see &lt;a href=&quot;https://github.com/mystor/git-revise/issues/35#issuecomment-523237380&quot;&gt;this issue&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;June&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/git-undo/&quot;&gt;git undo: We can do better&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;12&amp;nbsp;October&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/in-memory-rebases/&quot;&gt;Lightning-fast rebases with git-move&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;October&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/build-aware-sparse-checkouts/&quot;&gt;Build-aware sparse checkouts&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;16&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/bringing-revsets-to-git/&quot;&gt;Bringing revsets to Git&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/in-memory-rebases/&quot;;
    this.page.identifier = &quot;in-memory-rebases/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Tue, 12 Oct 2021 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/in-memory-rebases/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/in-memory-rebases/</guid>
        
        <category>git</category>
        
        <category>rust</category>
        
        <category>software-engineering</category>
        
        
      </item>
    
      <item>
        <title>Automatically detecting and replying to recruiter spam</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot; id=&quot;markdown-toc-introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bayesian-filtering&quot; id=&quot;markdown-toc-bayesian-filtering&quot;&gt;Bayesian filtering&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#approach&quot; id=&quot;markdown-toc-approach&quot;&gt;Approach&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#properties&quot; id=&quot;markdown-toc-properties&quot;&gt;Properties&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#training&quot; id=&quot;markdown-toc-training&quot;&gt;Training&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deployment&quot; id=&quot;markdown-toc-deployment&quot;&gt;Deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#automatic-salary-negotiation&quot; id=&quot;markdown-toc-automatic-salary-negotiation&quot;&gt;Automatic salary negotiation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#results&quot; id=&quot;markdown-toc-results&quot;&gt;Results&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#example&quot; id=&quot;markdown-toc-example&quot;&gt;Example&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#efficacy&quot; id=&quot;markdown-toc-efficacy&quot;&gt;Efficacy&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#responses&quot; id=&quot;markdown-toc-responses&quot;&gt;Responses&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#selected-amusing-keywords&quot; id=&quot;markdown-toc-selected-amusing-keywords&quot;&gt;Selected amusing keywords&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bugs&quot; id=&quot;markdown-toc-bugs&quot;&gt;Bugs&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#non-existent-words&quot; id=&quot;markdown-toc-non-existent-words&quot;&gt;Non-existent words&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#email-delivery&quot; id=&quot;markdown-toc-email-delivery&quot;&gt;Email delivery&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-posts&quot; id=&quot;markdown-toc-related-posts&quot;&gt;Related posts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code for this post is at my Github repository: &lt;a href=&quot;https://github.com/arxanas/detect-recruiter-spam&quot;&gt;github.com/arxanas/detect-recruiter-spam&lt;/a&gt;. However, I have not included my pre-trained model, since it contains sensitive information derived from  my email inbox. If you would like to use my API endpoint, send me an email.&lt;/p&gt;

&lt;p&gt;If you just want to see the results, skip to &lt;a href=&quot;#results&quot;&gt;Results&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Many software engineers I know complain about the frequency of “recruiter spam” emails. These emails are unsolicited, obviously-generic emails sent in an attempt to push engineers through their hiring pipelines, regardless of whether they would be a good fit for the job in question.&lt;/p&gt;

&lt;p&gt;It’s understandable. In the current climate (I live in the US), job-seeking is a numbers game. Job seekers blast countless job sites with their résumés, while recruiters browse through LinkedIn wielding a mouse in one hand and a templated introduction in the other.&lt;/p&gt;

&lt;p&gt;So why engage with these recruiters? Well, as a college graduate, I interviewed at a certain company, thinking that I would never accept a job offer from them. But the recruiter really astounded me with the whole experience, and that company changed from being barely a contender to one of my top choices. Since then, I have a policy of at least giving companies a chance to impress me.&lt;/p&gt;

&lt;p&gt;So I don’t want to miss out on a potential opportunity, but on the other hand, I don’t want to waste time on low-quality recruiter interactions. So I decided that further automated emailing must be the solution.&lt;/p&gt;

&lt;h2 id=&quot;bayesian-filtering&quot;&gt;Bayesian filtering&lt;/h2&gt;

&lt;p&gt;A Bayesian spam filter is a simple binary classification model, often used as a first project in a machine learning course. It accepts a document and returns whether it thinks that the document is spam or not. I used the &lt;a href=&quot;https://scikit-learn.org/stable/&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt;&lt;/a&gt; library to build my model.&lt;/p&gt;

&lt;h3 id=&quot;approach&quot;&gt;Approach&lt;/h3&gt;

&lt;p&gt;The idea is to encode each message as a vector of zeros and ones. To do this, we first accumulate all of the different words across all of the different messages (with some normalization applied, such as lowercasing, removing punctuation, lemmatizing, etc.). Then we assign each unique word a different index, starting from zero. For each unique word in a given message, we set the entry at that word’s index to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; in its corresponding vector. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt; includes the convenient &lt;a href=&quot;https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; class for this purpose.&lt;/p&gt;

&lt;p&gt;Then we just feed the result into a pre-made Bayesian classifier model. I used &lt;a href=&quot;https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MultinomialNB&lt;/code&gt;&lt;/a&gt; from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt;. (This model actually accepts a vector of not just zeros and ones, but word frequency counts.)&lt;/p&gt;

&lt;p&gt;The code is relatively simple, available here: &lt;a href=&quot;https://github.com/arxanas/detect-recruiter-spam/blob/main/recruiterspam/train.py&quot;&gt;https://github.com/arxanas/detect-recruiter-spam/blob/main/recruiterspam/train.py&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;properties&quot;&gt;Properties&lt;/h3&gt;

&lt;p&gt;A Bayesian filter is a decent general-purpose classifier for this use-case. However, it’s worth noting some of its limitations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It isn’t able to deal with words that didn’t appear in the training set.&lt;/li&gt;
  &lt;li&gt;If the training set has few positive or negative examples, it may not be trained very accurately.
    &lt;ul&gt;
      &lt;li&gt;For example, if your training set has 0.01% spam messages, then a classifier which always outputs “not spam” will be accurate for the vast majority of the inputs, but such a model is useless.&lt;/li&gt;
      &lt;li&gt;According to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt; documentation, there are some tricks that can be done to improve the accuracy in these cases, such as by training classification against the complement of the desired output classes.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In real life, a false positive (detecting an email as spam when it’s not) is particularly bad if it results in the loss of important communication, while a false negative (failing to detect a spam email) is mostly an annoyance. Thus, a typical Bayesian classifier probably wants to optimize to reduce false positives.&lt;/p&gt;

&lt;p&gt;In our case, I don’t mind if the classifier occasionally returns false positives, because the resulting emails won’t be deleted — the recipient will just receive an automated email, which they can ignore. Thus, we can afford to optimize the classifier towards decreasing false negatives.&lt;/p&gt;

&lt;h2 id=&quot;training&quot;&gt;Training&lt;/h2&gt;

&lt;p&gt;To actually train the model, I went through all of my email and manually tagged recruiter spam emails as such. This wasn’t too bad, as I was able to filter out most of the automated email in my inbox pretty easily during manual annotation.&lt;/p&gt;

&lt;p&gt;The repository includes two scripts to download your mailbox. One works by reading each message over IMAP, while the other works by reading a local &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mbox&lt;/code&gt; file. (For Gmail, you can get an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.mbox&lt;/code&gt; file by using the Google Takeout feature.)&lt;/p&gt;

&lt;p&gt;My training set consisted of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;16752 messages,&lt;/li&gt;
  &lt;li&gt;182 of which were spam,&lt;/li&gt;
  &lt;li&gt;resulting in an accuracy of 95.2%,&lt;/li&gt;
  &lt;li&gt;and a false positive rate of 4.7%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For an actual spam filter, these numbers would be abysmal, but they’re fine for my purposes.&lt;/p&gt;

&lt;h2 id=&quot;deployment&quot;&gt;Deployment&lt;/h2&gt;

&lt;p&gt;The model is deployed as a REST API endpoint. I tried really hard to deploy the model to AWS Lambda, but despite my packaging everything up into a Docker container, I had inscrutable differences between my local testing environment and the cloud one, and I couldn’t get it to work. In the end, I gave up and used a Heroku instance ($7 per month), which is significantly more expensive, but at least works without hassle.&lt;/p&gt;

&lt;p&gt;To connect the model to my email account and have it be able to reply on my behalf, I first tried using services like Zapier and IFTTT. However, they didn’t have useful integrations at the free tier, and the paid tier would cost $25+ per month, which was more than I wanted to pay.&lt;/p&gt;

&lt;p&gt;Instead, I used &lt;a href=&quot;https://www.cloudmailin.com/&quot;&gt;CloudMailIn&lt;/a&gt;. They have a usable free tier, helpful documentation, and customer support even helped me with a coding issue I had during development.&lt;/p&gt;

&lt;p&gt;I simply set up a Gmail filter to forward email to CloudMailIn, which forwarded it to the Heroku service. The service would then call back into CloudMailIn to send a reply email using my email address, if necessary.&lt;/p&gt;

&lt;h2 id=&quot;automatic-salary-negotiation&quot;&gt;Automatic salary negotiation&lt;/h2&gt;

&lt;p&gt;Large companies have well-defined levels with associated compensation ranges. In my script, if I was able to determine the company that the recruiter represented, I cross-referenced the recruiter’s company with data from &lt;a href=&quot;https://www.levels.fyi/&quot;&gt;Levels.fyi&lt;/a&gt; and compared it to my current company’s level and salary, and used that information to propose a level to interview at. (I’ve been bitten a couple of times by not clarifying the salary ranges up-front with recruiters, so I figure it’s best to automate it.)&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;p&gt;Here’s an example exchange with Amazon:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dear Waleed,&lt;/p&gt;

  &lt;p&gt;I came across your LinkedIn profile and am so impressed with your skill set! I’m looking for great people with your background for our AZ, OR, TX, TN, NY, CA and Canada locations for SDEII (80% coding and 20% System design).&lt;/p&gt;

  &lt;p&gt;IF YOU ARE CURRENTLY WORKING OR HAS APPLIED FOR ANY POSITION WITH AMAZON IN THE LAST 3 MONTHS. PLEASE LET ME KNOW&lt;/p&gt;

  &lt;p&gt;If not, I was wondering if you would like to connect and discuss possibilities?&lt;/p&gt;

  &lt;p&gt;Qualifications&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;3+ years of non-internship professional software development experience&lt;/li&gt;
    &lt;li&gt;Programming experience with at least one modern language such as Java, C++, or C# including object-oriented design&lt;/li&gt;
    &lt;li&gt;1+ years of experience contributing to the architecture and design (architecture, design patterns, reliability and scaling) of new and current systems.&lt;/li&gt;
    &lt;li&gt;Experience building complex software systems that have been successfully delivered to customers&lt;/li&gt;
    &lt;li&gt;Knowledge of professional software engineering practices and best practices for the full software development lifecycle, including coding standards, code reviews, source control management, build processes, testing, and operations&lt;/li&gt;
    &lt;li&gt;Ability to take a project from scoping requirements through actual launch of the project&lt;/li&gt;
    &lt;li&gt;Experience in communicating with users, other technical teams, and management to collect requirements, describe software product features, and technical designs.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;If interested, please reply back to me along with contact details and email.&lt;/p&gt;

  &lt;p&gt;[Recruiter name]&lt;br /&gt;
Technical Recruiter at Amazon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And here’s the automated response:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hello,&lt;/p&gt;

  &lt;p&gt;I am always open to the right opportunity, but since I receive so much email from recruiters, I don’t have time to individually follow up on every message.&lt;/p&gt;

  &lt;p&gt;To make things easier for us both, please include the following in your reply:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;The location of the position.&lt;/li&gt;
    &lt;li&gt;Whether your company supports remote work.&lt;/li&gt;
    &lt;li&gt;The team which is hiring.&lt;/li&gt;
    &lt;li&gt;How my experience relates to the team in question.&lt;/li&gt;
    &lt;li&gt;When you are looking to fill the position.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;I enjoy competitive compensation at my current company, TWITTER. I’ve automatically looked up the compensation details for the company you appear to represent, AMAZON, and it seems like I would have to receive an offer at the below level to be compensated competitively.&lt;/p&gt;

  &lt;p&gt;Company name: AMAZON&lt;/p&gt;

  &lt;p&gt;Compensation rating: C&lt;/p&gt;

  &lt;p&gt;Suggested level for competitive compensation: PRINCIPAL SDE/L7&lt;/p&gt;

  &lt;p&gt;Can you confirm that you can offer the position at the above level?&lt;/p&gt;

  &lt;p&gt;The following are the details of why your message was flagged as a recruiting message. If this email was sent in error, you can ignore it.&lt;/p&gt;

  &lt;p&gt;Probability: &amp;gt;99%&lt;/p&gt;

  &lt;p&gt;Top keywords: SCOPING, OBJECTORIENTED, CONTRIBUTING, LIFECYCLE, COMMUNICATING&lt;/p&gt;

  &lt;p&gt;Best,&lt;/p&gt;

  &lt;p&gt;Recruiter Reply Bot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The recruiter did not reply in this case (see &lt;a href=&quot;#email-delivery&quot;&gt;Bugs&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&quot;efficacy&quot;&gt;Efficacy&lt;/h3&gt;

&lt;p&gt;The bot correctly detected 36 recruiter emails over a 3-month period, out of which 6 emails led to further conversation.&lt;/p&gt;

&lt;p&gt;At the rate of $7.72 per month,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;That’s $0.64 per response,&lt;/li&gt;
  &lt;li&gt;or $3.86 per thread which led to actual discussion.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That price could definitely be reduced (such as by using serverless computing), but considering that I stand to make tens of thousands dollars more per year if I actually do accept a new position, I don’t consider it a bad price to generate “real” leads with recruiters.&lt;/p&gt;

&lt;p&gt;The bot also produced 12 false positive replies:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 false positive to a “real” person who was trying to sell me SEO services.&lt;/li&gt;
  &lt;li&gt;4 false positives to a correspondent who writes their emails in Polish, due to a serious bug (see &lt;a href=&quot;#non-existent-words&quot;&gt;Bugs&lt;/a&gt;). I removed this person from the email forwarding filter after that, so the real incidence would have been higher.&lt;/li&gt;
  &lt;li&gt;4 false positives in response to Facebook Pay automated emails written in Polish, due to the same bug. There were many more automated emails written in Polish from the same service, so it’s not clear to me why only some of them triggered a reply.&lt;/li&gt;
  &lt;li&gt;2 false positives to LinkedIn email notifications, which would probably be difficult to accurately detect given its nature as a recruiting service.&lt;/li&gt;
  &lt;li&gt;1 false positive to an automated newsletter from a miscellaneous service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were 29 further false positive replies which were caused by silly bugs, such as replying to emails even when the prediction probability was 0%, which I didn’t include in the above list.&lt;/p&gt;

&lt;h3 id=&quot;responses&quot;&gt;Responses&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Response #1 (from a recruiter firm): They represented an early-stage startup in Canada. They gave a salary range, but I declined because they couldn’t meet my US-centric salary expectations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response #2 (from a recruiter for finance): They responded with “Thank you for responding to my email, automated though it may be.”, being the only person who acknowledged the automated nature of my response. They gave me useful information with the role and location, but only said that compensation “a minimum of 30% more than what you’re making now”. I declined because I was interested in working in functional programming languages, rather than C++ and Python.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response #3 (from a recruiting firm): I asked for a salary range in advance, and they declined to give it (after a 10-email thread!), so we stopped communication.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response #4 (from an early-stage startup): I asked for a salary range in advance, and they declined to give it, so we stopped communication.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response #5 (from a late-stage startup): I actually proceeded to a phone call with the recruiter. They had an interesting team, but I declined to move forward with an interview, since it wouldn’t be a substantial compensation increase, and the equity portion would be illiquid, as the company was not public.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Response #6 (from an early-stage startup): They just responded “Okay, thank you!” to my automated reply, which I assume means that they did not want to share salary information.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;selected-amusing-keywords&quot;&gt;Selected amusing keywords&lt;/h3&gt;

&lt;p&gt;Recruiters use a lot of common buzzwords in their emails, which is the premise for detecting those emails automatically. Here are some of the keywords which I found amusing. (Each of the following keywords &lt;a href=&quot;https://github.com/arxanas/detect-recruiter-spam/blob/829b2ed18394388fe977ce39f407107c88f16a66/recruiterspam/train.py#L141-L142&quot;&gt;had to appear in more than one email in the training set&lt;/a&gt; to be flagged.)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PROFITABLE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACTIONABLE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MOBILIZE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAPIDLY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COGNITIVE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AMAZONIANS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INNOVATE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PURSUING&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAPIDLY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SKILLED&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARLINGTON&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MICROSERVICES&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FINTECH&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JERSEY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STRIVING&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PIQUED&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FOREFRONT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COMPLIANT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAPIDLY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HEALTHTECH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENG&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COMPELLING&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CERTAINTY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OWNING&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TALENTED&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FINTECH&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOURCER&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COLLABORATIVE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMPRESSED&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OUTDATED&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;“Sourcer” is part of the sender’s signature, rather than the email body.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AUTONOMOUS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOURCER&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACCELERATION&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CRUISE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TALENTED&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RECONNECT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAREERSGOOGLECOM&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LATELY&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMAGINE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACCOMMODATION&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Obviously, this one was from Google. The punctuation in the URL has been removed as part of preprocessing.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SCOPING&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OBJECTORIENTED&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CONTRIBUTING&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIFECYCLE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COMMUNICATING&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;250K&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FINTECH&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HYPERGROWTH&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LUCRATIVE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RAPIDLY&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Apparently $250k is a common number mentioned in recruiting emails?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGMA&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AMIDST&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHEERS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECTIVE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHAW&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;“Sigma” refers to “Two Sigma” and “Shaw” refers to “DE Shaw”, both finance firms.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AMIDST&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECTIVE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHAW&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REVOLUTIONIZE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QUANTITATIVE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bugs&quot;&gt;Bugs&lt;/h2&gt;

&lt;h3 id=&quot;non-existent-words&quot;&gt;Non-existent words&lt;/h3&gt;

&lt;p&gt;Strangely, the filter triggers often on email which contain words that don’t appear in the training corpus. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CountVectorizer&lt;/code&gt; should have removed these words from the input vector, and if the vector were entirely empty in the end, then the output should have taken on the prior probability of ~1%, which is not enough to trigger a response.&lt;/p&gt;

&lt;p&gt;For example, an email with the following keywords was triggered:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Probability: &amp;gt;99%&lt;/p&gt;

  &lt;p&gt;Top keywords: MIDZY, UKASZ, MINUT, DZISIEJSZE, PAR&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;None of these words appeared in the training set, so they should not have contributed to the classification.&lt;/p&gt;

&lt;p&gt;T/L note: non-ASCII letters were removed as part of pre-processing. Here is the translation table for the above words:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“MIDZY” = “między”, meaning “during”;&lt;/li&gt;
  &lt;li&gt;“UKASZ” = “Łukasz”, a given name;&lt;/li&gt;
  &lt;li&gt;“MINUT” means “minute”;&lt;/li&gt;
  &lt;li&gt;“DZISIEJSZE” means “today’s”;&lt;/li&gt;
  &lt;li&gt;“PAR” = “parę”, meaning “couple”.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;email-delivery&quot;&gt;Email delivery&lt;/h3&gt;

&lt;p&gt;When receiving an email from LinkedIn, it says at the bottom that I can reply to the email directly. However, it appears that all of the reply emails bounced with the error “550 5.7.1 sender not authorised to email this recipient”. I assume that this is because I haven’t set up SPF on my domain. I could either set it up, or route my emails directly through Gmail.&lt;/p&gt;

&lt;p&gt;Additionally, I never received a response from any Microsoft or Amazon recruiter, despite them making up the vast majority of incoming recruiter emails. The logs indicate that email delivery succeeded, but they’re using custom recruiting management solutions, so perhaps the email was rejected at some later step in the process.&lt;/p&gt;

&lt;p&gt;Or alternatively, maybe they’ve decided not to waste their time with my automated emails, just like I decided not to waste my time with theirs?&lt;/p&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related posts&lt;/h2&gt;

&lt;p&gt;The following are hand-curated posts which you might find interesting.&lt;/p&gt;

&lt;table class=&quot;related-posts&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Date&lt;/th&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Title&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;

  &lt;tr&gt;
    &lt;td&gt;19&amp;nbsp;September&amp;nbsp;2016&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/dot-name-email-address/&quot;&gt;Is having a &apos;.name&apos; email address a good idea?&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;13&amp;nbsp;October&amp;nbsp;2016&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/messenger-conversation-macros/&quot;&gt;Analyzing all of my Messenger conversations to create conversational macros&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;12&amp;nbsp;September&amp;nbsp;2018&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/getting-a-job-in-pl/&quot;&gt;How to get a job in programming languages&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;29&amp;nbsp;April&amp;nbsp;2020&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/mail-server/&quot;&gt;I used to run my own mail server&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;04&amp;nbsp;October&amp;nbsp;2021&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      (this&amp;nbsp;post)
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/detect-recruiter-spam/&quot;&gt;Automatically detecting and replying to recruiter spam&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;09&amp;nbsp;November&amp;nbsp;2022&lt;/td&gt;
    &lt;td class=&quot;this-post&quot;&gt;
      
      &lt;/td&gt;
    &lt;td&gt;&lt;a href=&quot;/detect-recruiter-spam-update-1/&quot;&gt;Update #1: Automatically detecting and replying to recruiter spam&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Want to see more of my posts? Follow me &lt;a href=&quot;https://twitter.com/arxanas&quot;&gt;on Twitter&lt;/a&gt; or subscribe &lt;a href=&quot;/feed.xml&quot;&gt;via RSS&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/detect-recruiter-spam/&quot;;
    this.page.identifier = &quot;detect-recruiter-spam/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Mon, 04 Oct 2021 00:00:00 -0500</pubDate>
        <link>https://blog.waleedkhan.name/detect-recruiter-spam/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/detect-recruiter-spam/</guid>
        
        <category>career</category>
        
        <category>machine-learning</category>
        
        <category>python</category>
        
        
      </item>
    
  </channel>
</rss>
