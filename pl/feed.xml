<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Steno &amp; PL</title>
    <description>This is a personal blog. Unless otherwise stated, the opinions
expressed here are my own, and not those of my past or present
employers.</description>
    <link>https://blog.waleedkhan.name/pl/</link>
    <atom:link href="https://blog.waleedkhan.name/pl/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 24 Jan 2023 19:19:39 -0600</pubDate>
    <lastBuildDate>Tue, 24 Jan 2023 19:19:39 -0600</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Interaktywne blogi</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#niech-żyje-ten-blog&quot; id=&quot;markdown-toc-niech-żyje-ten-blog&quot;&gt;Niech żyje ten blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dla mnie, najlepszym platformą na blogging jest &lt;a href=&quot;https://www.google.com/docs&quot;&gt;Google Docs&lt;/a&gt;, bo obsługuje poniższe:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Współpracować na żywo.&lt;/li&gt;
  &lt;li&gt;Pozostawiać komentarze bezpośrednio w tekście, a nie w ograniczonym obszarze.&lt;/li&gt;
  &lt;li&gt;Sugerować zmiany bezpośrednio w tekście. Cóż miły sposób na poprawianie tekstu!
    &lt;ul&gt;
      &lt;li&gt;Z tego powodu również wolę Wikis od Git’a, jeśli chodzi o pisanie dokumentacji, bo bariera wejścia jest znacznie mniejsza.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Niestety, Google Docs nie jest zwłaszcza dostępny:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wydaje się, że nie będzie indeksowany przez wyszukiwarki?&lt;/li&gt;
  &lt;li&gt;Wymaga Javascript.&lt;/li&gt;
  &lt;li&gt;Wymaga Google, czemu niektórzy ludzie sprzeciwiają się ze względu na prywatność.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dlatego nie wydaję w ten sposób postów na blogu.&lt;/p&gt;

&lt;style type=&quot;text/css&quot;&gt;
@keyframes hypermedia {
  0%, 100% {
    left: -1em;
    top: 0.4em;
    z-index: 1;
    font-size: normal;
  }
  
  25% {
    font-size: 1.3em;
  }
  
  75% {
    font-size: 0.7em;
  }

  50% {
    left: 97%;
    top: -0.6em;
    z-index: 1;
    font-size: normal;
  }
  
  51%, 99% {
    z-index: -1;
  }
}

.hypermedia {
  letter-spacing: 0.1em;
  position: relative;
  font-variant: small-caps;
}

.hypermedia::before {
  content: &quot;✨&quot;;
  position: absolute;
  animation-name: hypermedia;
  animation-duration: 6s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}
&lt;/style&gt;

&lt;p&gt;Ale w dobie &lt;span class=&quot;hypermedia&quot;&gt;hipermediów&lt;/span&gt; te funkcje powinny być standardem! Powinniśmy &lt;span class=&quot;hypermedia&quot;&gt;dyskutować&lt;/span&gt;, a nie wyrzucać artykuły &lt;span class=&quot;hypermedia&quot;&gt;w próżnię&lt;/span&gt;!&lt;/p&gt;

&lt;p&gt;Medium wyświetlało komentarze w tekście, ale &lt;a href=&quot;https://medium.com/@jashan/how-to-make-the-best-of-a-broken-commenting-system-113c8cc1fe71&quot;&gt;już tego nie robi&lt;/a&gt; (nie żebym chciał wydawać posty na Medium). Nie widziałem wielu innych blogów, które zapraszają do dyskusji za pomocą interaktywnych funkcji.&lt;/p&gt;

&lt;p&gt;Kiedyś czytałem &lt;em&gt;&lt;a href=&quot;https://dev.realworldocaml.org/&quot;&gt;Real World OCaml&lt;/a&gt;&lt;/em&gt;, kiedy jego drugie wydanie było w wersji roboczej. Po każdym zdaniu znajdował się link na pozostawianie komentarza. To jest naprawdę fajny sposób na pisanie książki! Dlaczego akurat książka jest bardziej interaktywna niż nasze blogi?&lt;/p&gt;

&lt;h2 id=&quot;niech-żyje-ten-blog&quot;&gt;Niech żyje ten blog&lt;/h2&gt;

&lt;p&gt;Od niedawna można pozostawiać komentarze na akapitach mojego blogu, najeżdżając/dotykając i klikając link “Skomentuj”, który się pojawi.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Inne rozwiązania:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://utteranc.es&quot;&gt;https://utteranc.es&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;Używany już do komentarzy na tym blogu, chociaż jest trochę podejrzany, jeśli chodzi o korzystanie plików cookie.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Każda z tych opcji wymaga tworzenie własnego wątku komentarza dla każdego akapitu, na którym można skomentować.
        &lt;ul&gt;
          &lt;li&gt;Ich UIs nie zostały zaprojektowane tak, aby były zwarte, więc nie pasują dobrze między akapitami na blogu. Byłoby ogromny formularz po każdym akapitu.&lt;/li&gt;
          &lt;li&gt;Spowodowałoby to niepotrzebne obciążenie serwerów komentarzy, trochę niegrzecznie dla nich.&lt;/li&gt;
          &lt;li&gt;Spowodowałoby to wolniejsze ładowanie strony podczas zapytania do kilku wątków komentarzy.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Możesz czerpać inspirację z projektu takiego jak SideComments.js.&lt;/li&gt;
      &lt;li&gt;Moja implementacja niestety opiera się na GitHub jako dostawcy uwierzytelniania i bazie danych. Jestem pewien, że wielu czytelników nie będzie miało kont GitHub’a.
        &lt;ul&gt;
          &lt;li&gt;To był dla mnie najłatwiejszy sposób na zaimplementowanie.&lt;/li&gt;
          &lt;li&gt;GitHub API jest wystarczająco wyrazisty, aby wysłać zapytanie o wszystkie komentarze dla pewnego dokumentu w jednym żądaniu.&lt;/li&gt;
          &lt;li&gt;GitHub API nie wymaga uwierzytelniania ani klucza API do wysyłania żądań!
            &lt;ul&gt;
              &lt;li&gt;Przypuszczalnie będziesz ograniczany bardziej agresywnie niż w przypadku uwierzytelnienia.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Otwarcie nowej strony GitHub Issues’a w celu pozostawiania komentarza jest niewygodnie.&lt;/li&gt;
          &lt;li&gt;Patrząc wstecz, być może powinienem był użyć GitHub Discussions’a zamiast GitHub Issues’a jako bazy daty, ponieważ są to… dyskusje.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Akapity są identyfikowane za pomocą permalinku/”slug” i poprzez pobranie kilku pierwszych znormalizowanych bajtów danych w akapicie i zakodowanie jako base64.
        &lt;ul&gt;
          &lt;li&gt;Teoretycznie identyfikatory akapitów nie są zatem stabilne, jeśli treść zmienia się później, ale wydaje się, że jest to niewielki problem.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Oto implementacja w momencie pisania tego tekstu (137 linii kodu): &lt;a href=&quot;https://github.com/arxanas/blog/blob/c34f0e18b81ed1d1b22636eaef2cabe7b6afd77e/scripts/github-comment-links.js&quot;&gt;github-comment-links.js&lt;/a&gt;.
        &lt;ul&gt;
          &lt;li&gt;Nowoczesne API przeglądarki sprawiają, że zapytanie do API GitHub’a jest dość proste.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;



&lt;/ul&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/scripts/github-comment-links.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/pl/interaktywne-blogi/&quot;;
    this.page.identifier = &quot;interaktywne-blogi/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Wed, 11 Jan 2023 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/pl/interaktywne-blogi/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/pl/interaktywne-blogi/</guid>
        
        <category>rant</category>
        
        <category>writing</category>
        
        
      </item>
    
      <item>
        <title>Gdzie są moje funkcji Git’a z przyszłości?</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#git-jest-do-bani&quot; id=&quot;markdown-toc-git-jest-do-bani&quot;&gt;Git jest do bani&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rubryka&quot; id=&quot;markdown-toc-rubryka&quot;&gt;Rubryka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#klienty&quot; id=&quot;markdown-toc-klienty&quot;&gt;Klienty&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#wyróżnienia&quot; id=&quot;markdown-toc-wyróżnienia&quot;&gt;Wyróżnienia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comments&quot; id=&quot;markdown-toc-comments&quot;&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-jest-do-bani&quot;&gt;Git jest do bani&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;System kontroli wersji “Git”&lt;/a&gt; od 15+ lat przynosi nam nieszczęście. Od momentu powstania, tysiące osób próbowało stworzyć nowe klienty Git’a aby poprawić jego użyteczność.&lt;/p&gt;

&lt;p&gt;Jednak, prawie każda z nich skupiła się budować ładną fasadę nad Git’em, żeby robić te same operacji, które właśnie robi Git, jakby interfejs linii komend Git’a był szczytem użyteczności.&lt;/p&gt;

&lt;p&gt;Nikt nie raczy się zastanowić: jakie są &lt;em&gt;przepływy pracy&lt;/em&gt;, które osoby właśnie chcą wykonywać? Jakie są &lt;em&gt;funkcji&lt;/em&gt;, ułatwiające takie przepływy pracy? Zamiast, dostajemy klienty, które uważają, że &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt; to najlepszy sposób, aby zmienić komunikat zatwierdzenia, aby edytować zatwierdzenie, aby rozdzielić zatwierdzenie — albo, że warto nawet pokazać w UI tę funkcję.&lt;/p&gt;

&lt;h2 id=&quot;rubryka&quot;&gt;Rubryka&lt;/h2&gt;

&lt;p&gt;Rozmyślałem o przepływach pracy, które często wykonuję, i sprawdziłem kilka klientów Git’a (niektóre z nich są GUIs, i niektóre TUIs), żebym zrozumiał, jak dobrze je obsługują.&lt;/p&gt;

&lt;p&gt;Wielu z moich czytelników nie dba o tych przepływach pracy, ale to nie tylko sprawa samych przepływach pracy; chodzi o decyzję, by nie używać wadliwych prymitywnych oferowanych przez Git.&lt;/p&gt;

&lt;p&gt;Przepływy pracy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reword&lt;/code&gt;&lt;/strong&gt;: Trzeba być możliwe aktualizować komunikat zatwierdzenia, który nie jest wypożyczany.
    &lt;ul&gt;
      &lt;li&gt;Aktualizowanie komunikatu zatwierdzenia nie spowoduje konfliktu scalania, zatem nie jest potrzebny wymagać, że zatwierdzenie jest wypożyczany.&lt;/li&gt;
      &lt;li&gt;Też powinno być możliwe aktualizować komunikat zatwierdzenia, który jest przodkiem wielu gałęzi, bez porzucania niektórych z tych gałęzi, ale nie róbmy sobie nadziei…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sync&lt;/code&gt;&lt;/strong&gt;: Trzeba być możliwe synchronizować wszystkie moje gałęzi (albo dowolny podzbiór) przez scalanie lub zmianę bazy [ang. “rebase”], w jednej operacji!
    &lt;ul&gt;
      &lt;li&gt;Robię to cały czas! Praktycznie pierwsza rzecz każdego ranka przychodząc do pracy.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;split&lt;/code&gt;&lt;/strong&gt;: Trzeba być szczególne polecenie, aby dzielić zatwierdzenie na dwa lub więcej zatwierdzeń, w tym zatwierdzenia, które nie są aktualnie wypożyczane.
    &lt;ul&gt;
      &lt;li&gt;Dzielenie zatwierdzenia nie spowoduje konfliktu scalania, zatem nie jest potrzebny wymagać, że zatwierdzenie jest wypożyczany.&lt;/li&gt;
      &lt;li&gt;Nie akceptuję rozwiązań za pomocą &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt;, ponieważ sprawdzanie stanu repozytorium podczas zmiany bazy jest bardzo mylące.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preview&lt;/code&gt;&lt;/strong&gt;: Przed wykonaniem scalania albo zmianą bazy, trzeba być możliwy podgląd wyniku, w tym ewentualne konflikty.
    &lt;ul&gt;
      &lt;li&gt;W ten sposób, nie muszę rozpoczynać scalania/zmiany bazy, żeby zobaczyć, czy się powiedzie, albo czy będzie trudno mi rozwiązać konflikty.&lt;/li&gt;
      &lt;li&gt;Konfliktami scalania może są najokropniejsza rzecz w używaniu Git’a, dlatego powinno być bardzo łatwiej zajmować się nimi (albo unikać zajmowania się nimi!).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;undo&lt;/code&gt;&lt;/strong&gt;: Trzeba być możliwe cofnąć się z dowolnej operacji, najlepiej obejmujące śledzone-ale-niezatwierdzone zmiany.
    &lt;ul&gt;
      &lt;li&gt;To nie to samo, co cofnięcie [ang. “revert”] zatwierdzenia. Cofnięcie zatwierdzenia tworzy całkowicie nowe zatwierdzenie z odwrotnych zmian, ale cofnięcie operacji powinno przywrócić repozytorium do stanu, w jakim znajdowało się przed wykonaniem operacji, więc nie byłoby pierwotnego zatwierdzenia do przywrócenia.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;large-load&lt;/code&gt;&lt;/strong&gt;: UI powinien szybko ładować duże repozytorium.
    &lt;ul&gt;
      &lt;li&gt;UI nie powinien zawieszać się w żadnym momencie i powinien pokazywać przydatne informacje zaraz po załadowaniu. Nie powinieneś czekać na załadowanie całego repozytorium, zanim będziesz mógł sprawdzić zatwierdzenia i gałęzi.&lt;/li&gt;
      &lt;li&gt;Program może działać wolno przy pierwszym wywołaniu w celu zbudowania niezbędnych pamięci podręcznych, ale musi reagować szybko na kolejne wywołania.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;large-ops&lt;/code&gt;&lt;/strong&gt;: UI powinien reagować szybko podczas wykonywania różnych operacji, takich jak sprawdzanie zatwierdzeń i gałęzi, lub scalanie i zmianę bazy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dodatkowe punkty:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Przyznam honorowe punkty ujemne każdemu klientowi, który ośmieli się potraktować git rebase -i tak, jakby był fundamentalnym prymitywem.&lt;/li&gt;
  &lt;li&gt;Przyznam honorowe punkty bonusowe każdemu klientowi, który wydaje się szanować empiryczne badania użyteczności dla Git (lub innych VCS).
    &lt;ul&gt;
      &lt;li&gt;Gitless:&lt;a href=&quot;https://gitless.com/&quot;&gt; https://gitless.com/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;IASGE:&lt;a href=&quot;https://investigating-archiving-git.gitlab.io/&quot;&gt; https://investigating-archiving-git.gitlab.io/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Z powodu, że nie zapisałem nic z tego, te kryteria są tylko po to, aby każdy sprzedawca tych klientów mógł wiedzieć, czy jestem pod wrażeniem, czy rozczarowany.&lt;/p&gt;

&lt;h2 id=&quot;klienty&quot;&gt;Klienty&lt;/h2&gt;

&lt;p&gt;Wybrałem arbitralnie kilku klientów z tej listy klientów. Z pewnością mylę się co do niektórych z tych punktów (lub zmieniły się od ostatniego razu), więc skomentuj.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aktualizacja 2022-01-09: Dodałem IntelliJ.&lt;/li&gt;
  &lt;li&gt;Aktualizacja 2022-01-10: Dodałem Tower.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Załączyłem mój własny projekt git-branchless, ale się nie liczy jako przykład innowacji w branży. Tylko jest tu, aby pokazać, że wiele z tych przepływów pracy jest naprawdę możliwych.&lt;/p&gt;

&lt;style type=&quot;text/css&quot;&gt;
th.rotate {
  /* Something you can count on */
  height: 140px;
  white-space: nowrap;
}

th.rotate &gt; div {
  transform: 
    translate(20px, 51px) /* magic numbers */
    rotate(320deg);
  width: 30px;
}
th.rotate &gt; div &gt; span {
  padding: 5px 10px;
}

#data th:nth-child(even) &gt; div &gt; span, #data td:nth-child(even) {
  background-color: #eee;
}

&lt;/style&gt;

&lt;table id=&quot;data&quot;&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git CLI&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.gitkraken.com/&quot;&gt;GitKraken&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://git-fork.com/&quot;&gt;Fork&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;Sourcetree&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.sublimemerge.com/&quot;&gt;Sublime Merge&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.syntevo.com/smartgit/&quot;&gt;SmartGit&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.git-tower.com/&quot;&gt;Tower&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://gitup.co/&quot;&gt;GitUp&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://magit.vc/&quot;&gt;Magit&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/jesseduffield/lazygit&quot;&gt;Lazygit&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/extrawurst/gitui&quot;&gt;Gitui&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/arxanas/git-branchless&quot;&gt;git-branchless&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
    &lt;th class=&quot;rotate&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;a href=&quot;https://github.com/martinvonz/jj&quot;&gt;Jujutsu&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;reword&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;❌&amp;nbsp;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;split&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;❌&amp;nbsp;&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;preview&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;3&lt;/sup&gt;&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;4&lt;/sup&gt;&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;5&lt;/sup&gt;&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;6&lt;/sup&gt;&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;undo&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❓&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;⚠️&amp;nbsp;&lt;sup&gt;7&lt;/sup&gt;&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;large-load&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;8&lt;/sup&gt;&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;9&lt;/sup&gt;&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;
  
  &lt;tr&gt;
    &lt;th&gt;&lt;code&gt;large-ops&lt;/code&gt;&lt;/th&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;8&lt;/sup&gt;&lt;/td&gt; &lt;!-- Git CLI --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- GitKraken --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Fork --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Sourcetree --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Sublime Merge --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- SmartGit --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- Tower --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- GitUp --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- IntelliJ --&gt;
    &lt;td&gt;✅&amp;nbsp;&lt;sup&gt;9&lt;/sup&gt;&lt;/td&gt; &lt;!-- Magit --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Lazygit --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- Gitui --&gt;
    &lt;td&gt;✅&lt;/td&gt; &lt;!-- git-branchless --&gt;
    &lt;td&gt;❌&lt;/td&gt; &lt;!-- jj --&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Uwagi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;sup&gt;1&lt;/sup&gt; Można to zrobić za pomocą &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt; lub odpowiednika, ale nie jest to ergonomiczne i działa tylko w przypadku zatwierdzeń osiągalnych z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;, a nie z innych gałęzi.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;2&lt;/sup&gt; Zmiana komunikatu zatwierdzenia można wykonać bez wypożyczaniu zatwierdzenia, ale tylko na zatwierdzeń osiągalnych z &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;. Może istnieją dodatkowe ograniczenia.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;3&lt;/sup&gt; Częściowe wsparcie. Może pokazać, czy można przewijać scalanie do przodu, ale bez dodatkowych szczegołów.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;4&lt;/sup&gt; Można to robić za pomocą &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magit-merge-preview&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;5&lt;/sup&gt; Częściowe wsparcie. Jeśli operacja spowoduje konflikt scalania, i opcja &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--merge&lt;/code&gt; nie została przekazana, zamiast tego zostanie przerwana i pokaże liczbę plików w stanu konfliktu.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;6&lt;/sup&gt; Jujutsu nie pozwala na podgląd konfliktów scalania, ale scalanie i rebase zawsze się udają, a konflikty są przechowywane w zatwierdzeniu, a potem możesz cofnąć operację, jeśli nie chcesz zajmować się konfliktami scalania. W razie potrzeby możesz nawet przywrócić starą wersję zatwierdzenia po przeprowadzeniu scalania/zmiany bazy. Pozwala to uniknąć przerywania przepływu pracy, co jest ostatecznym celem tej funkcji, dlatego oceniam, że wystarczy dla tej kategorii.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;7&lt;/sup&gt; Obsługa cofania jest eksperymentalna i zależy na reflogu, który &lt;a href=&quot;https://github.com/arxanas/git-branchless/wiki/Architecture#comparison-with-the-reflog&quot;&gt;nie może cofnąć wszystkich rodzajów operacji&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;8&lt;/sup&gt; Git ma problemy z niektórymi operacjami na dużych repozytoriach i można je ulepszyć, ale uznamy to za podstawową wydajność dla dużych repozytoriów.&lt;/li&gt;
  &lt;li&gt;&lt;sup&gt;9&lt;/sup&gt; Chyba Magit ma taką samą wydajność jak Git, ale nie sprawdziłem, bo nie używam Emacs’a.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wyróżnienia&quot;&gt;Wyróżnienia&lt;/h2&gt;

&lt;p&gt;Pochwały:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitUp: najbardziej innowacyjny GUI dla Git’a spośród powyższych.&lt;/li&gt;
  &lt;li&gt;GitKraken: wprowadza innowację w niektórych obszarach, takie jak ulepszona obsługa scentralizowanych przepływów pracy przez ostrzeganie o współbieżnie edytowanych plikach. Te obszary nie są napisane powyżej; Po prostu zauważyłem je przy innych okazjach.&lt;/li&gt;
  &lt;li&gt;Sublime Merge: niesamowicie responsywny, jak można się spodziewać po ludziach odpowiedzialnych za &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Tower: za przyjemną implementację cofania.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wady:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fork: za utrudnienie wyszukiwania dokumentacji (bo “git fork undo” zazwyczaj produkuje wyniki cofania rozwidlenia w ogóle, a nie dla klienta Fork).&lt;/li&gt;
  &lt;li&gt;SmartGit: z braki we wszystkich testowanych kategoriach.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;comments&quot;&gt;Comments&lt;/h2&gt;

&lt;ul&gt;

&lt;li&gt;&lt;a class=&quot;icon-hacker-news&quot; href=&quot;https://news.ycombinator.com/item?id=34301543 &quot;&gt;Discussion on Hacker News&lt;/a&gt;&lt;/li&gt;


&lt;li&gt;&lt;a class=&quot;icon-lobsters&quot; href=&quot;https://lobste.rs/s/7tnnbq/where_are_my_git_ui_features_from_future &quot;&gt;Discussion on Lobsters&lt;/a&gt;&lt;/li&gt;


&lt;/ul&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;/scripts/github-comment-links.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;

/**
 *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */
var disqus_config = function () {
    this.page.url = &quot;https://blog.waleedkhan.name/pl/git-ui-funkcji/&quot;;
    this.page.identifier = &quot;git-ui-funkcji/&quot;;
};

(function() { // DON&apos;T EDIT BELOW THIS LINE
    var d = document, s = d.createElement(&apos;script&apos;);
    s.src = &apos;//waleedkhan-name.disqus.com/embed.js&apos;;
    s.setAttribute(&apos;data-timestamp&apos;, +new Date());
    (d.head || d.body).appendChild(s);
})();
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Thu, 05 Jan 2023 00:00:00 -0600</pubDate>
        <link>https://blog.waleedkhan.name/pl/git-ui-funkcji/</link>
        <guid isPermaLink="true">https://blog.waleedkhan.name/pl/git-ui-funkcji/</guid>
        
        <category>git</category>
        
        <category>rant</category>
        
        <category>software-engineering</category>
        
        
      </item>
    
  </channel>
</rss>
