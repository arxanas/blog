# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely need to edit after that.
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'jekyll serve'. If you change this file, please restart the server process.

# Site settings
title: Steno & PL
description: |-
  This is a personal blog. Unless otherwise stated, the opinions
  expressed here are my own, and not those of my past or present
  employers.
real_name: Waleed Khan
email: me@waleedkhan.name
url: "https://blog.waleedkhan.name" # the base hostname & protocol for your site
github_username: arxanas
twitter_username: arxanas
google_analytics_id: 'UA-53066274-1'
permalink: none

# Build settings
markdown: kramdown

plugins:
  - jekyll-katex
  - jekyll-multiple-languages-plugin
  - jekyll-twitter-plugin

katex:
  rendering_options:
    throw_error: true                       # throwOnError - set to false if you want rendering to output error as text rather than a build error

languages: ["en", "pl"]
exclude_from_localizations: ["assets", "css", "scripts"]

related_posts:
  # Steno:
  - - steno-adventures-part-1/
    - steno-adventures-part-2/
    - steno-journal/
    - my-steno-system/
    - language-learning-anecdotes/

  # Social:
  - - dot-name-email-address/
    - messenger-conversation-macros/
    - mail-server/
    - detect-recruiter-spam/
    - detect-recruiter-spam-update-1/

  # Career:
  - - detect-recruiter-spam/
    - detect-recruiter-spam-update-1/
    - getting-a-job-in-pl/

  # Deliberate practice:
  - - lan-adapter/
    - smash-bros-parabola-rule/
    - pro-controller-stick-drift/
    - hours-invested-vs-percentile-rank/
    - smash-mistakes/

  # Gaming:
  - - lan-adapter/
    - pro-controller-stick-drift/
    - playing-elden-ring-in-the-cloud/
    - playing-elden-ring-in-the-cloud-update-1/

  # Rust:
  - - port-python-to-rust/
    - rust-modules-for-python-users/
    - tracing-rust-cli-apps/
    - rust-incremental-test-times/
    - encoding-ml-style-modules-in-rust/

  # Source control:
  - - git-undo/
    - in-memory-rebases/
    - build-aware-sparse-checkouts/
    - bringing-revsets-to-git/
    - git-ui-features/
    - patch-terminology/

  # Incremental computation:
  - - monotonicity/
    - build-aware-sparse-checkouts/
    - incremental-watchman/
    - half-my-work-is-adding-a-cache/
    - lithe-less-analysis-with-datalog/

  # FIXME: What do these posts have to do with each other??
  - - writing-brittle-code/
    - smash-training-retrospective/
    - data-comprehension-syntaxes/

  # Software validation:
  - - writing-brittle-code/
    - on-trivial-changes/
    - testing-tui-apps/

  # Programming languages:
  - - parsing-contextual-keywords/
    - data-comprehension-syntaxes/
    - union-vs-sum-types/
    - functions-are-constants/
    - monotonicity/
    - data-comprehension-syntaxes/
    - encoding-ml-style-modules-in-rust/
    - lithe-less-analysis-with-datalog/
